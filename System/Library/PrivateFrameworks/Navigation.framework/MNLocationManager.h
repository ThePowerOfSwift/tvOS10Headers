/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:36 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/Navigation.framework/Navigation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/GEOResourceManifestTileGroupObserver.h>
#import <libobjc.A.dylib/MNLocationProviderDelegate.h>

@protocol MNLocationProvider, MNLocationRecorder;
@class NSHashTable, NSLock, MNLocation, GEOLocationShifter, CLHeading, NSDate, NSError, NSString, NSBundle;

@interface MNLocationManager : NSObject <GEOResourceManifestTileGroupObserver, MNLocationProviderDelegate> {

	id<MNLocationProvider> _locationProvider;
	id<MNLocationRecorder> _locationRecorder;
	NSHashTable* _locationObservers;
	NSHashTable* _locationListeners;
	NSHashTable* _headingObservers;
	NSLock* _observersLock;
	NSLock* _lastLocationLock;
	MNLocation* _lastLocation;
	MNLocation* _lastGoodLocation;
	GEOLocationShifter* _locationShifter;
	double _lastLocationUpdateTime;
	double _lastLocationReportTime;
	double _locationUpdateStartTime;
	CLHeading* _heading;
	NSDate* _lastUpdatedHeadingDate;
	BOOL _hasCustomDesiredAccuracy;
	BOOL _enabled;
	BOOL _trackingLocation;
	BOOL _logStartStopLocationUpdates;
	BOOL _isLastLocationStale;
	BOOL _lastLocationPushed;
	BOOL _useCourseForHeading;
	BOOL _trackingHeading;
	NSError* _locationError;
	/*^block*/id _locationCorrector;

}

@property (nonatomic,copy) id locationCorrector;                                   //@synthesize locationCorrector=_locationCorrector - In the implementation block
@property (nonatomic,copy) NSString * effectiveBundleIdentifier; 
@property (nonatomic,readonly) BOOL isHeadingServicesAvailable; 
@property (nonatomic,readonly) CLHeading * heading;                                //@synthesize heading=_heading - In the implementation block
@property (nonatomic,readonly) MNLocation * lastLocation; 
@property (nonatomic,retain) NSBundle * effectiveBundle; 
@property (nonatomic,readonly) BOOL hasLocation; 
@property (nonatomic,readonly) BOOL isLastLocationStale; 
@property (nonatomic,readonly) NSError * locationError;                            //@synthesize locationError=_locationError - In the implementation block
@property (nonatomic,readonly) double expectedGpsUpdateInterval; 
@property (nonatomic,readonly) double timeScale; 
@property (nonatomic,retain) id<MNLocationProvider> locationProvider; 
@property (nonatomic,retain) id<MNLocationRecorder> locationRecorder;              //@synthesize locationRecorder=_locationRecorder - In the implementation block
@property (assign,nonatomic) double desiredAccuracy; 
@property (assign,nonatomic) double distanceFilter; 
@property (assign,nonatomic) int headingOrientation; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedLocationManager;
-(void)dealloc;
-(id)init;
-(void)reset;
-(CLHeading *)heading;
-(long long)activityType;
-(NSBundle *)effectiveBundle;
-(BOOL)hasLocation;
-(void)resourceManifestManager:(id)arg1 didChangeActiveTileGroup:(id)arg2 fromOldTileGroup:(id)arg3 ;
-(void)setLastLocation:(MNLocation *)arg1 ;
-(MNLocation *)lastLocation;
-(void)setDistanceFilter:(double)arg1 ;
-(void)setDesiredAccuracy:(double)arg1 ;
-(void)setHeadingOrientation:(int)arg1 ;
-(void)setEffectiveBundle:(NSBundle *)arg1 ;
-(NSString *)effectiveBundleIdentifier;
-(void)setEffectiveBundleIdentifier:(NSString *)arg1 ;
-(double)desiredAccuracy;
-(double)distanceFilter;
-(int)headingOrientation;
-(double)expectedGpsUpdateInterval;
-(void)setActivityType:(long long)arg1 ;
-(double)timeScale;
-(void)locationProvider:(id)arg1 didUpdateLocation:(id)arg2 ;
-(void)locationProvider:(id)arg1 didUpdateHeading:(id)arg2 ;
-(void)locationProvider:(id)arg1 didReceiveError:(id)arg2 ;
-(void)locationProviderDidChangeAuthorizationStatus:(id)arg1 ;
-(BOOL)locationProviderShouldPauseLocationUpdates:(id)arg1 ;
-(void)locationProviderDidPauseLocationUpdates:(id)arg1 ;
-(void)locationProviderDidResumeLocationUpdates:(id)arg1 ;
-(void)locationProvider:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3 ;
-(void)locationProvider:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3 ;
-(void)_useCoreLocationProvider;
-(void)setLocationCorrector:(id)arg1 ;
-(void)setLocationRecorder:(id<MNLocationRecorder>)arg1 ;
-(BOOL)isLocationServicesAuthorizationNeeded;
-(BOOL)isLocationServicesApproved;
-(BOOL)isLocationServicesDenied;
-(BOOL)isLocationServicesRestricted;
-(BOOL)isLocationServicesAvailable;
-(BOOL)isLocationServicesPossiblyAvailable;
-(BOOL)isHeadingServicesAvailable;
-(id<MNLocationProvider>)locationProvider;
-(void)setLocationProvider:(id<MNLocationProvider>)arg1 ;
-(int)lastLocationSource;
-(id)lastGoodLocation;
-(void)_reportLocationStatus:(SEL)arg1 ;
-(void)_reportLocationFailureWithError:(id)arg1 ;
-(void)_reportLocationSuccess;
-(void)_reportLocationReset;
-(void)_syncLocationProviderWithTracking;
-(void)_setTrackingLocation:(BOOL)arg1 ;
-(BOOL)isLocationServicesPossiblyAvailable:(id*)arg1 ;
-(void)pushLocation:(id)arg1 ;
-(void)listenForLocationUpdates:(id)arg1 ;
-(void)stopListeningForLocationUpdates:(id)arg1 ;
-(void)_startLocationUpdateWithObserver:(id)arg1 desiredAccuracy:(double)arg2 ;
-(void)startLocationUpdateWithObserver:(id)arg1 ;
-(void)stopLocationUpdateWithObserver:(id)arg1 ;
-(void)_setTrackingHeading:(BOOL)arg1 ;
-(void)startHeadingUpdateWithObserver:(id)arg1 ;
-(void)stopHeadingUpdateWithObserver:(id)arg1 ;
-(BOOL)isLastLocationStale;
-(NSError *)locationError;
-(id<MNLocationRecorder>)locationRecorder;
-(id)locationCorrector;
-(void)_setLastLocationReceivedFromMaps:(id)arg1 ;
-(void)_locationProvider:(id)arg1 didUpdateLocation:(id)arg2 ;
@end

