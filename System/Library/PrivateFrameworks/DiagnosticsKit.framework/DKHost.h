/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:21 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/DiagnosticsKit.framework/DiagnosticsKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/DKAssetResponder.h>
#import <libobjc.A.dylib/DKBrightnessResponder.h>
#import <libobjc.A.dylib/DKVolumeHUDResponder.h>

@protocol DKAssetResponder, DKBrightnessResponder, DKVolumeHUDResponder, OS_dispatch_queue;
@class NSMutableDictionary, NSMutableArray, NSObject, NSCondition, NSString;

@interface DKHost : NSObject <DKAssetResponder, DKBrightnessResponder, DKVolumeHUDResponder> {

	BOOL _discoveryComplete;
	id<DKAssetResponder> _assetResponder;
	id<DKBrightnessResponder> _brightnessResponder;
	id<DKVolumeHUDResponder> _volumeHUDResponder;
	id _extensionDiscoveryTokenUI;
	id _extensionDiscoveryToken;
	id _extensionDiscoveryTokenRestrictedUI;
	id _extensionDiscoveryTokenRestricted;
	NSMutableDictionary* _diagnostics;
	NSMutableArray* _runningExtensions;
	NSObject*<OS_dispatch_queue> _discoveryQueue;
	NSCondition* _discoveryLock;

}

@property (nonatomic,retain) id extensionDiscoveryTokenUI;                                      //@synthesize extensionDiscoveryTokenUI=_extensionDiscoveryTokenUI - In the implementation block
@property (nonatomic,retain) id extensionDiscoveryToken;                                        //@synthesize extensionDiscoveryToken=_extensionDiscoveryToken - In the implementation block
@property (nonatomic,retain) id extensionDiscoveryTokenRestrictedUI;                            //@synthesize extensionDiscoveryTokenRestrictedUI=_extensionDiscoveryTokenRestrictedUI - In the implementation block
@property (nonatomic,retain) id extensionDiscoveryTokenRestricted;                              //@synthesize extensionDiscoveryTokenRestricted=_extensionDiscoveryTokenRestricted - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * diagnostics;                                 //@synthesize diagnostics=_diagnostics - In the implementation block
@property (nonatomic,retain) NSMutableArray * runningExtensions;                                //@synthesize runningExtensions=_runningExtensions - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> discoveryQueue;                       //@synthesize discoveryQueue=_discoveryQueue - In the implementation block
@property (nonatomic,retain) NSCondition * discoveryLock;                                       //@synthesize discoveryLock=_discoveryLock - In the implementation block
@property (assign,nonatomic) BOOL discoveryComplete;                                            //@synthesize discoveryComplete=_discoveryComplete - In the implementation block
@property (assign,nonatomic,__weak) id<DKAssetResponder> assetResponder;                        //@synthesize assetResponder=_assetResponder - In the implementation block
@property (assign,nonatomic,__weak) id<DKBrightnessResponder> brightnessResponder;              //@synthesize brightnessResponder=_brightnessResponder - In the implementation block
@property (assign,nonatomic,__weak) id<DKVolumeHUDResponder> volumeHUDResponder;                //@synthesize volumeHUDResponder=_volumeHUDResponder - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(void)enableVolumeHUD:(BOOL)arg1 ;
-(void)setScreenToBrightness:(float)arg1 animate:(BOOL)arg2 ;
-(void)getAsset:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id<DKVolumeHUDResponder>)volumeHUDResponder;
-(id<DKBrightnessResponder>)brightnessResponder;
-(id<DKAssetResponder>)assetResponder;
-(void)setVolumeHUDResponder:(id<DKVolumeHUDResponder>)arg1 ;
-(void)setBrightnessResponder:(id<DKBrightnessResponder>)arg1 ;
-(void)setAssetResponder:(id<DKAssetResponder>)arg1 ;
-(void)_beginExtensionDiscovery;
-(BOOL)_checkPrerequisitesForDiagnostic:(id)arg1 parameters:(id)arg2 error:(id*)arg3 ;
-(void)_startRequest:(id)arg1 parameters:(id)arg2 ;
-(NSCondition *)discoveryLock;
-(BOOL)discoveryComplete;
-(NSMutableArray *)runningExtensions;
-(void)setDiscoveryComplete:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_queue>)discoveryQueue;
-(void)setExtensionDiscoveryToken:(id)arg1 ;
-(void)setExtensionDiscoveryTokenUI:(id)arg1 ;
-(void)setExtensionDiscoveryTokenRestricted:(id)arg1 ;
-(void)setExtensionDiscoveryTokenRestrictedUI:(id)arg1 ;
-(void)_prepareHandlersForRequest:(id)arg1 ;
-(BOOL)_freeSpaceAvailable:(id)arg1 ;
-(void)beginDiagnosticWithIdentifier:(id)arg1 parameters:(id)arg2 presentingViewController:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)availableDiagnostics;
-(void)cancelAllDiagnostics;
-(id)extensionDiscoveryTokenUI;
-(id)extensionDiscoveryToken;
-(id)extensionDiscoveryTokenRestrictedUI;
-(id)extensionDiscoveryTokenRestricted;
-(void)setRunningExtensions:(NSMutableArray *)arg1 ;
-(void)setDiscoveryQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setDiscoveryLock:(NSCondition *)arg1 ;
-(NSMutableDictionary *)diagnostics;
-(void)setDiagnostics:(NSMutableDictionary *)arg1 ;
@end

