/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:01:56 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WebCore/DOMHTMLElement.h>

@class DOMMediaError, NSString, DOMTimeRanges;

@interface DOMHTMLMediaElement : DOMHTMLElement

@property (readonly) DOMMediaError * error; 
@property (copy) NSString * src; 
@property (copy,readonly) NSString * currentSrc; 
@property (copy) NSString * crossOrigin; 
@property (readonly) unsigned short networkState; 
@property (copy) NSString * preload; 
@property (readonly) DOMTimeRanges * buffered; 
@property (readonly) unsigned short readyState; 
@property (readonly) BOOL seeking; 
@property (assign) double currentTime; 
@property (readonly) double duration; 
@property (readonly) BOOL paused; 
@property (assign) double defaultPlaybackRate; 
@property (assign) double playbackRate; 
@property (readonly) DOMTimeRanges * played; 
@property (readonly) DOMTimeRanges * seekable; 
@property (readonly) BOOL ended; 
@property (assign) BOOL autoplay; 
@property (assign) BOOL loop; 
@property (assign) BOOL controls; 
@property (assign) double volume; 
@property (assign) BOOL muted; 
@property (assign) BOOL defaultMuted; 
@property (assign) BOOL webkitPreservesPitch; 
@property (readonly) BOOL webkitHasClosedCaptions; 
@property (assign) BOOL webkitClosedCaptionsVisible; 
@property (copy) NSString * mediaGroup; 
-(NSString *)crossOrigin;
-(void)setCrossOrigin:(NSString *)arg1 ;
-(NSString *)currentSrc;
-(NSString *)preload;
-(void)setPreload:(NSString *)arg1 ;
-(DOMTimeRanges *)buffered;
-(DOMTimeRanges *)seekable;
-(BOOL)ended;
-(BOOL)defaultMuted;
-(void)setDefaultMuted:(BOOL)arg1 ;
-(BOOL)webkitPreservesPitch;
-(void)setWebkitPreservesPitch:(BOOL)arg1 ;
-(BOOL)webkitHasClosedCaptions;
-(BOOL)webkitClosedCaptionsVisible;
-(void)setWebkitClosedCaptionsVisible:(BOOL)arg1 ;
-(NSString *)mediaGroup;
-(void)setMediaGroup:(NSString *)arg1 ;
-(id)canPlayType:(id)arg1 ;
-(double)getStartDate;
-(void)fastSeek:(double)arg1 ;
-(double)duration;
-(void)load;
-(double)currentTime;
-(BOOL)paused;
-(void)pause;
-(DOMMediaError *)error;
-(void)play;
-(void)setDefaultPlaybackRate:(double)arg1 ;
-(void)setCurrentTime:(double)arg1 ;
-(double)playbackRate;
-(void)setPlaybackRate:(double)arg1 ;
-(BOOL)muted;
-(double)volume;
-(double)defaultPlaybackRate;
-(void)setVolume:(double)arg1 ;
-(void)setMuted:(BOOL)arg1 ;
-(BOOL)seeking;
-(NSString *)src;
-(void)setSrc:(NSString *)arg1 ;
-(unsigned short)networkState;
-(BOOL)controls;
-(void)setControls:(BOOL)arg1 ;
-(BOOL)loop;
-(DOMTimeRanges *)played;
-(BOOL)autoplay;
-(void)setLoop:(BOOL)arg1 ;
-(void)setAutoplay:(BOOL)arg1 ;
-(unsigned short)readyState;
@end

