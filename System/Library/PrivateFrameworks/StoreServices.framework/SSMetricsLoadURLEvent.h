/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:01:52 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <StoreServices/SSMetricsMutableEvent.h>

@class NSString;

@interface SSMetricsLoadURLEvent : SSMetricsMutableEvent

@property (nonatomic,retain) NSString * clientCorrelationKey; 
@property (nonatomic,retain) NSString * clientError; 
@property (assign,nonatomic) double connectionEndTime; 
@property (assign,nonatomic) BOOL connectionReused; 
@property (assign,nonatomic) unsigned long long connectionStartNStatRXBytes; 
@property (assign,nonatomic) unsigned long long connectionStartNStatTXBytes; 
@property (assign,nonatomic) unsigned long long connectionStopNStatRXBytes; 
@property (assign,nonatomic) unsigned long long connectionStopNStatTXBytes; 
@property (assign,nonatomic) double connectionStartTime; 
@property (nonatomic,retain) NSString * connectionType; 
@property (assign,nonatomic) double domainLookupEndTime; 
@property (assign,nonatomic) double domainLookupStartTime; 
@property (nonatomic,retain) NSString * DNSServers; 
@property (assign,nonatomic) double fetchStartTime; 
@property (assign,nonatomic) unsigned long long redirectCount; 
@property (assign,nonatomic) double redirectEndTime; 
@property (assign,nonatomic) double redirectStartTime; 
@property (assign,nonatomic) double requestStartTime; 
@property (nonatomic,retain) NSString * requestURL; 
@property (nonatomic,retain) NSString * resolvedIPAddress; 
@property (assign,nonatomic) double responseEndTime; 
@property (assign,nonatomic) double responseStartTime; 
@property (assign,nonatomic) double secureConnectionStartTime; 
@property (assign,nonatomic) long long statusCode; 
@property (assign,setter=setXPSessionDuration:,nonatomic) double xpSessionDuration; 
@property (assign,setter=setXPSamplingForced:,nonatomic) BOOL xpSamplingForced; 
@property (assign,setter=setXPSamplingPercentageUsers:,nonatomic) double xpSamplingPercentageUsers; 
@property (assign,setter=setXPSamplingPercentageCachedResponses:,nonatomic) double xpSamplingPercentageCachedResponses; 
+(BOOL)shouldLogTimingMetrics;
+(BOOL)shouldReportCachedEvent;
+(BOOL)shouldCollectTimingData;
+(id)_timingMetricsWindowStartTime;
+(double)_randomDouble;
+(void)_setTimingMetricsWindowStartTime:(id)arg1 ;
-(void)setResponseEndTime:(double)arg1 ;
-(NSString *)clientCorrelationKey;
-(void)setClientCorrelationKey:(NSString *)arg1 ;
-(double)connectionEndTime;
-(void)setConnectionEndTime:(double)arg1 ;
-(double)connectionStartTime;
-(void)setConnectionStartTime:(double)arg1 ;
-(unsigned long long)connectionStartNStatRXBytes;
-(void)setConnectionStartNStatRXBytes:(unsigned long long)arg1 ;
-(unsigned long long)connectionStartNStatTXBytes;
-(void)setConnectionStartNStatTXBytes:(unsigned long long)arg1 ;
-(unsigned long long)connectionStopNStatRXBytes;
-(void)setConnectionStopNStatRXBytes:(unsigned long long)arg1 ;
-(unsigned long long)connectionStopNStatTXBytes;
-(void)setConnectionStopNStatTXBytes:(unsigned long long)arg1 ;
-(double)domainLookupEndTime;
-(void)setDomainLookupEndTime:(double)arg1 ;
-(double)domainLookupStartTime;
-(void)setDomainLookupStartTime:(double)arg1 ;
-(double)fetchStartTime;
-(void)setFetchStartTime:(double)arg1 ;
-(double)redirectEndTime;
-(void)setRedirectEndTime:(double)arg1 ;
-(double)redirectStartTime;
-(void)setRedirectStartTime:(double)arg1 ;
-(double)requestStartTime;
-(void)setRequestStartTime:(double)arg1 ;
-(double)responseEndTime;
-(double)responseStartTime;
-(void)setResponseStartTime:(double)arg1 ;
-(double)secureConnectionStartTime;
-(void)setSecureConnectionStartTime:(double)arg1 ;
-(BOOL)xpSamplingForced;
-(void)setXPSamplingForced:(BOOL)arg1 ;
-(double)xpSessionDuration;
-(void)setXPSessionDuration:(double)arg1 ;
-(double)xpSamplingPercentageUsers;
-(void)setXPSamplingPercentageUsers:(double)arg1 ;
-(double)xpSamplingPercentageCachedResponses;
-(void)setXPSamplingPercentageCachedResponses:(double)arg1 ;
-(void)setClientError:(NSString *)arg1 ;
-(void)setDNSServers:(NSString *)arg1 ;
-(void)setRequestURL:(NSString *)arg1 ;
-(void)setResolvedIPAddress:(NSString *)arg1 ;
-(NSString *)requestURL;
-(NSString *)DNSServers;
-(NSString *)resolvedIPAddress;
-(NSString *)clientError;
-(id)init;
-(id)description;
-(long long)statusCode;
-(NSString *)connectionType;
-(void)setConnectionType:(NSString *)arg1 ;
-(void)setStatusCode:(long long)arg1 ;
-(void)setRedirectCount:(unsigned long long)arg1 ;
-(unsigned long long)redirectCount;
-(void)setConnectionReused:(BOOL)arg1 ;
-(BOOL)connectionReused;
@end

