/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:26 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/NSOperation.h>

@class SSAuthenticateRequest, MPCRadioGetTracksOperation, NSLock, RadioStationMatchContext, SSVPlaybackLease, RadioRequestContext, RadioStation;

@interface MPCPrepareRadioPlaybackOperation : NSOperation {

	SSAuthenticateRequest* _authenticateRequest;
	/*^block*/id _firstTrackBlock;
	MPCRadioGetTracksOperation* _getTracksOperation;
	NSLock* _lock;
	RadioStationMatchContext* _nowPlayingMatchContext;
	SSVPlaybackLease* _playbackLease;
	/*^block*/id _preparedBlock;
	RadioRequestContext* _requestContext;
	RadioStation* _station;
	RadioStationMatchContext* _stationMatchContext;
	BOOL _willContinuePlayback;

}

@property (copy) id preparedBlock; 
@property (retain) SSVPlaybackLease * playbackLease; 
@property (copy) RadioRequestContext * requestContext;                             //@synthesize requestContext=_requestContext - In the implementation block
@property (retain) RadioStation * station; 
@property (retain) RadioStationMatchContext * nowPlayingMatchContext; 
@property (retain) RadioStationMatchContext * stationMatchContext; 
@property (assign) BOOL willContinuePlayback; 
-(void)cancel;
-(id)init;
-(void)main;
-(RadioStation *)station;
-(void)setStation:(RadioStation *)arg1 ;
-(RadioRequestContext *)requestContext;
-(void)setRequestContext:(RadioRequestContext *)arg1 ;
-(RadioStationMatchContext *)stationMatchContext;
-(void)setStationMatchContext:(RadioStationMatchContext *)arg1 ;
-(SSVPlaybackLease *)playbackLease;
-(void)setPlaybackLease:(SSVPlaybackLease *)arg1 ;
-(RadioStationMatchContext *)nowPlayingMatchContext;
-(void)setNowPlayingMatchContext:(RadioStationMatchContext *)arg1 ;
-(BOOL)willContinuePlayback;
-(void)setWillContinuePlayback:(BOOL)arg1 ;
-(id)preparedBlock;
-(void)setPreparedBlock:(id)arg1 ;
@end

