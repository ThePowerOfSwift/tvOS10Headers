/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:26 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaPlaybackCore/MediaPlaybackCore-Structs.h>
#import <MediaPlayer/MPQueueFeeder.h>
#import <libobjc.A.dylib/MPCQueueBehaviorManaging.h>

@class MPAVItem, NSMapTable, MPPlaceholderAVItem, NSArray, RadioStation, RadioStationSkipController, NSString;

@interface MPCRadioQueueFeeder : MPQueueFeeder <MPCQueueBehaviorManaging> {

	BOOL _canSeek;
	MPAVItem* _currentItem;
	BOOL _didReceiveTracklistEnd;
	unsigned long long _feederRevisionID;
	NSMapTable* _fetchingTracksCompletionHandlersByStation;
	BOOL _hasReceivedStreamTrack;
	BOOL _hasVerifiedCloudStatus;
	BOOL _isPreparingStation;
	long long _maximumGetTracksRetryCount;
	MPPlaceholderAVItem* _placeholderAVItem;
	NSArray* _previousDatabaseTrackPlaybackDescriptorQueue;
	RadioStation* _station;
	RadioStationSkipController* _stationSkipController;
	NSMapTable* _stationTracklistRetrievalRetryCount;
	NSArray* _tracks;
	BOOL _wasUsingBackgroundNetwork;

}

@property (nonatomic,copy) NSArray * tracks;                                        //@synthesize tracks=_tracks - In the implementation block
@property (nonatomic,retain) RadioStation * station; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) BOOL allowsUserVisibleUpcomingItems; 
@property (nonatomic,readonly) BOOL canSeek; 
@property (nonatomic,readonly) BOOL canSkipToPreviousItem; 
@property (nonatomic,readonly) long long playbackMode; 
@property (nonatomic,readonly) BOOL userCanChangeShuffleAndRepeatType; 
+(BOOL)supportsStateRestoration;
+(BOOL)isExplicitTracksEnabled;
+(long long)maximumNumberOfTracksToFetch;
+(BOOL)isProfileExplicitContentRestricted;
+(void)setUserDefaultExplicitTracksEnabled:(BOOL)arg1 ;
+(id)_tracksWithPromotionalContentFromTracks:(id)arg1 ;
+(void)_updateIsExplicitContentRestrictedAndPostNotification:(BOOL)arg1 removeTracks:(BOOL)arg2 ;
+(void)_explicitContentAllowedDidChangeNotification:(id)arg1 ;
+(BOOL)isUserDefaultExplicitTracksEnabled;
+(void)setIgnoresUserDefaultExplicitTracksEnabled:(BOOL)arg1 ;
+(id)_tracksByRemovingPromotionalContentFromTracks:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)_commonInit;
-(RadioStation *)station;
-(void)setStation:(RadioStation *)arg1 ;
-(unsigned long long)indexOfItemWithIdentifier:(id)arg1 ;
-(unsigned long long)itemCount;
-(id)copyRawItemAtIndex:(unsigned long long)arg1 ;
-(id)playbackInfoForIdentifier:(id)arg1 ;
-(id)identifierAtIndex:(unsigned long long)arg1 ;
-(void)reloadWithPlaybackContext:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3 ;
-(id)localizedPositionInPlaylistString:(id)arg1 ;
-(NSArray *)tracks;
-(Class)itemClass;
-(BOOL)hasValidItemAtIndex:(unsigned long long)arg1 ;
-(BOOL)canSkipItem:(id)arg1 ;
-(BOOL)allowsUserVisibleUpcomingItems;
-(BOOL)canSeek;
-(BOOL)canSkipToPreviousItem;
-(BOOL)userCanChangeShuffleAndRepeatType;
-(void)restoreState:(/*^block*/id)arg1 ;
-(BOOL)shouldReuseQueueFeederForPlaybackContext:(id)arg1 ;
-(BOOL)canReorder;
-(BOOL)playerPreparesItemsForPlaybackAsynchronously;
-(SCD_Struct_MP3)skipLimit;
-(long long)realRepeatType;
-(id)audioSessionModeForItemAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)initialPlaybackQueueDepthForStartingIndex:(unsigned long long)arg1 ;
-(unsigned long long)indexOfMediaItem:(id)arg1 ;
-(id)mediaItemAtIndex:(unsigned long long)arg1 ;
-(void)player:(id)arg1 currentItemDidChangeToItem:(id)arg2 ;
-(BOOL)player:(id)arg1 shouldContinuePlaybackForNetworkType:(long long)arg2 returningError:(id*)arg3 ;
-(id)modelPlayEvent;
-(BOOL)preventsHardQueueModificationsForItem:(id)arg1 ;
-(void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1 ;
-(void)_radioModelDidChangeNotification:(id)arg1 ;
-(unsigned long long)_indexOfItem:(id)arg1 ;
-(void)_applicationWillTerminateNotification:(id)arg1 ;
-(BOOL)isRadioQueueFeeder;
-(void)setTracks:(NSArray *)arg1 ;
-(void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1 ;
-(void)_updateForLoadedStoreBag:(id)arg1 ;
-(void)_storeBagDidLoadNotification:(id)arg1 ;
-(void)_verifyCloudStatusIfNeeded;
-(BOOL)_hasReceivedStreamTrack;
-(id)_trackAtIndex:(unsigned long long)arg1 shouldFetchAddtionalTracks:(BOOL)arg2 ;
-(BOOL)_canHavePlaceholderTrack;
-(id)_currentTrackPlaybackDescriptorQueueWithCurrentItem:(id)arg1 shouldIncludePlaybackInformation:(BOOL)arg2 skipDate:(id)arg3 ;
-(unsigned long long)_indexOfCurrentItem;
-(void)_updateWithTracks:(id)arg1 tracklistActionType:(long long)arg2 options:(long long)arg3 ;
-(void)_removeAllTracks;
-(void)_fetchAdditionalTracksWithBaseIndex:(long long)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)_updateTracksForChangedTrackPlaybackDescriptorQueue;
-(void)_configurePlaceholderAVItem;
-(void)_numberOfAvailableSkipsDidChangeNotification:(id)arg1 ;
-(void)_performGetTracksOperationForStation:(id)arg1 withNumberOfTracks:(long long)arg2 ;
-(unsigned long long)_indexOfItem:(id)arg1 inTracks:(id)arg2 ;
-(void)_sendContentsDidChangeWithCurrentItem;
-(id)_tracksByRemovingPlayedTracks:(id)arg1 ;
-(BOOL)shouldContinuePlaybackForNetworkType:(long long)arg1 player:(id)arg2 ;
@end

