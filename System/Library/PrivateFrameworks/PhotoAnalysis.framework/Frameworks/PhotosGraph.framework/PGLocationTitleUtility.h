/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:45 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/PhotoAnalysis.framework/Frameworks/PhotosGraph.framework/PhotosGraph
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <PhotosGraph/PhotosGraph-Structs.h>
@interface PGLocationTitleUtility : NSObject
+(id)beautifiedLocationNodeStringWithLocationNode:(id)arg1 ;
+(void)generateLocationTitleForTripWithMomentNodes:(id)arg1 result:(/*^block*/id)arg2 ;
+(void)generateLocationTitleWithMomentNodes:(id)arg1 displayOptions:(unsigned long long)arg2 keyAssetAddressNode:(id)arg3 curationAddressNodes:(id)arg4 result:(/*^block*/id)arg5 ;
+(void)_generateLocationTitleForTripWithMomentNodes:(id)arg1 filterMomentsAndCities:(BOOL)arg2 result:(/*^block*/id)arg3 ;
+(id)_peopleLocationFromAddressNode:(id)arg1 ;
+(id)_commonAOIComponentsForAddressNodes:(id)arg1 ;
+(id)_commonCityTitleComponentsFromMomentNodes:(id)arg1 addressNodes:(id)arg2 ignoredAddressNodes:(id)arg3 ;
+(id)_beautifiedLocationStringWithTitleComponents:(id)arg1 momentNodes:(id)arg2 keyAssetAddressNode:(id)arg3 curationAddressNodes:(id)arg4 isMatchingKeyAsset:(BOOL*)arg5 ;
+(id)_filteredAOINodesForAddressNodes:(id)arg1 ;
+(id)_validAOINodesCombinationsForCombinations:(id)arg1 aoiNodesToAddressNodesMapTable:(id)arg2 numberOfAddressNodesWithoutAOI:(unsigned long long)arg3 maximumNumberOfNonMatchingAddressNodes:(unsigned long long)arg4 ;
+(id)_sortedAOINodesCombinationsForCombinations:(id)arg1 aoiNodesToAddressNodesMapTable:(id)arg2 ;
+(id)_validAOINodesForCombination:(id)arg1 validCombinationLengths:(NSRange)arg2 validationBlock:(/*^block*/id)arg3 ;
+(id)_recursiveValidAOINodesForCombination:(id)arg1 validCombinationLengths:(NSRange)arg2 validationBlock:(/*^block*/id)arg3 currentCombination:(id)arg4 visitedNodes:(id)arg5 ;
+(float)_weightForAOINode:(id)arg1 withAddressNodes:(id)arg2 ;
+(id)_cityNodesToAddressNodesMapTableFromMomentNodes:(id)arg1 addressNodes:(id)arg2 ignoredAddressNodes:(id)arg3 ;
+(void)_resolveLocationNodesForMomentNodes:(id)arg1 ignoredAddressNodes:(id)arg2 ignoredLocationNodes:(id)arg3 incompleteLocationResolver:(id)arg4 locationNodesToAddressNodesMapTable:(id*)arg5 maximumMissingLocationsThreshold:(float)arg6 result:(/*^block*/id)arg7 ;
+(id)_firstComponentInTimeFromComponents:(id)arg1 momentNodes:(id)arg2 curationAddressNodes:(id)arg3 ;
+(id)_sortedComponentsFromComponents:(id)arg1 ;
+(void)_cityStateAndCountryNodesForLocationNodes:(id)arg1 result:(/*^block*/id)arg2 ;
+(BOOL)_visitedLocationNodeMoreThanOnce:(id)arg1 withReferenceMomentNodes:(id)arg2 ;
+(id)_filteredCityNodesByNameForCityNodes:(id)arg1 ;
+(void)_cityTitleWithCityNode:(id)arg1 countryNode:(id)arg2 visitedCountryOnlyOnce:(BOOL)arg3 momentNodes:(id)arg4 incompleteLocationResolver:(id)arg5 result:(/*^block*/id)arg6 ;
+(void)_aoiTitleWithLocationNodes:(id)arg1 momentNodes:(id)arg2 result:(/*^block*/id)arg3 ;
+(id)_cityNodesFromMomentNodes:(id)arg1 incompleteLocationResolver:(id)arg2 ;
+(id)_filteredSignificantLocationNodes:(id)arg1 forMomentNodes:(id)arg2 incompleteLocationResolver:(id)arg3 ;
+(void)_filterMomentNodesDependingOnSupersetsForMomentNodes:(id)arg1 incompleteLocationResolver:(id)arg2 result:(/*^block*/id)arg3 ;
+(id)_bestAddressNodeForCityNodes:(id)arg1 inMomentNodes:(id)arg2 incompleteLocationResolver:(id)arg3 ;
+(id)_locationTitleWithLocationNode:(id)arg1 addressNode:(id)arg2 countryNode:(id)arg3 allowSecondPart:(BOOL)arg4 ;
+(id)_twoPartLocationTitleWithFirstPartTitle:(id)arg1 withDimension:(unsigned long long)arg2 usedFirstPartLocationNode:(id)arg3 addressNode:(id)arg4 ;
+(id)_removeParenthesesInLocationName:(id)arg1 ;
@end

