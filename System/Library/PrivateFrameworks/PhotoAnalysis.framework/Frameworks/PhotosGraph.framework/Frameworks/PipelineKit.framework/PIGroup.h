/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:44 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/PhotoAnalysis.framework/Frameworks/PhotosGraph.framework/Frameworks/PipelineKit.framework/PipelineKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_group;
@class NSMutableArray, NSObject, PIStatisticsElapsedTime, PIPipeline, NSString, NSMutableDictionary, NSMapTable, NSArray;

@interface PIGroup : NSObject {

	long long _concurrencyLimit;
	BOOL _suspended;
	NSMutableArray* _operations;
	NSMutableArray* _executingOperations;
	long long _executingConcurrency;
	BOOL _removeOnCompletion;
	NSObject*<OS_dispatch_group> _operationsGroup;
	PIStatisticsElapsedTime* _executionTime;
	/*^block*/id _availableBlock;
	PIPipeline* _pipeline;
	NSString* _identifier;
	unsigned long long _priority;
	NSMutableDictionary* _operationsByPriority;
	NSMapTable* _operationsByKey;
	NSMapTable* _operationsByIdentifier;
	double _timestampStart;

}

@property (assign,nonatomic,__weak) PIPipeline * pipeline;                     //@synthesize pipeline=_pipeline - In the implementation block
@property (nonatomic,copy) NSString * identifier;                              //@synthesize identifier=_identifier - In the implementation block
@property (assign) long long concurrencyLimit;                                 //@synthesize concurrencyLimit=_concurrencyLimit - In the implementation block
@property (assign) unsigned long long priority;                                //@synthesize priority=_priority - In the implementation block
@property (assign) BOOL removeOnCompletion;                                    //@synthesize removeOnCompletion=_removeOnCompletion - In the implementation block
@property (getter=isSuspended) BOOL suspended;                                 //@synthesize suspended=_suspended - In the implementation block
@property (copy) id availableBlock;                                            //@synthesize availableBlock=_availableBlock - In the implementation block
@property (copy,readonly) NSArray * operations;                                //@synthesize operations=_operations - In the implementation block
@property (copy,readonly) NSArray * executingOperations;                       //@synthesize executingOperations=_executingOperations - In the implementation block
@property (readonly) unsigned long long operationsCount; 
@property (readonly) unsigned long long executingOperationsCount; 
@property (readonly) long long executingConcurrency; 
@property (readonly) BOOL isExecuting; 
+(id)group;
+(id)groupWithConcurrencyLimit:(long long)arg1 priority:(unsigned long long)arg2 ;
-(BOOL)isSuspended;
-(void)dealloc;
-(id)init;
-(id)description;
-(NSString *)identifier;
-(unsigned long long)priority;
-(void)setPriority:(unsigned long long)arg1 ;
-(void)setIdentifier:(NSString *)arg1 ;
-(NSArray *)operations;
-(void)addOperation:(id)arg1 ;
-(void)setSuspended:(BOOL)arg1 ;
-(BOOL)isExecuting;
-(double)executionTime;
-(void)_addOperation:(id)arg1 ;
-(void)setRemoveOnCompletion:(BOOL)arg1 ;
-(id)waitUntilFinished:(BOOL)arg1 ;
-(void)cancelAllOperations:(/*^block*/id)arg1 ;
-(void)setConcurrencyLimit:(long long)arg1 ;
-(double)wallTime;
-(void)cancelAllOperationsAndSuspendGroupUntilFinished:(/*^block*/id)arg1 ;
-(long long)concurrencyLimit;
-(void)setPipeline:(PIPipeline *)arg1 ;
-(void)_rebuildOperationsByPriority;
-(void)_removeOperation:(id)arg1 ;
-(unsigned long long)executingOperationsCount;
-(void)_operation:(id)arg1 didChangePriority:(long long)arg2 ;
-(NSArray *)executingOperations;
-(long long)executingConcurrency;
-(id)operationWithIdentifier:(id)arg1 ;
-(id)operationsWithPriority:(long long)arg1 ;
-(id)addOperationWithExecutionBlock:(/*^block*/id)arg1 ;
-(void)updateOperationsWithBlock:(/*^block*/id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)addOperations:(id)arg1 waitUntilFinishedBlock:(/*^block*/id)arg2 ;
-(void)_updateConcurrencyLimit;
-(id)availableBlock;
-(void)setAvailableBlock:(id)arg1 ;
-(void)addOperations:(id)arg1 ;
-(BOOL)removeOnCompletion;
-(PIPipeline *)pipeline;
-(unsigned long long)operationsCount;
-(void)waitUntilFinishedUsingBlock:(/*^block*/id)arg1 ;
-(id)operationsWithKey:(id)arg1 ;
@end

