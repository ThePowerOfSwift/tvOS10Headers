/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:20 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/CoreInterest.framework/CoreInterest
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreInterest/CoreInterest-Structs.h>
#import <libobjc.A.dylib/IFVector.h>

@protocol IFVector <NSObject,NSCopying,IFVectorOperating>
@property (readonly) double* vector; 
@property (readonly) unsigned long long length; 
@required
+(id)zeros:(unsigned long long)arg1;
+(id)vectorWithElements:(double*)arg1 length:(unsigned long long)arg2;
+(id)ones:(unsigned long long)arg1;
-(id)objectAtIndexedSubscript:(unsigned long long)arg1;
-(unsigned long long)length;
-(void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
-(double*)vector;

@end


@class NSString;

@interface IFVector : NSObject <IFVector> {

	double* _vector;
	unsigned long long _length;

}

@property (assign) double* vector;                                  //@synthesize vector=_vector - In the implementation block
@property (assign) unsigned long long length;                       //@synthesize length=_length - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)zeros:(unsigned long long)arg1 ;
+(id)vectorWithElements:(double*)arg1 length:(unsigned long long)arg2 ;
+(id)ones:(unsigned long long)arg1 ;
-(void)dealloc;
-(id)objectAtIndexedSubscript:(unsigned long long)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(NSString *)description;
-(unsigned long long)length;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setLength:(unsigned long long)arg1 ;
-(void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2 ;
-(id)initWithLength:(unsigned long long)arg1 ;
-(void)setVector:(double*)arg1 ;
-(double*)vector;
-(double)performScalarOperation:(id)arg1 other:(id)arg2 ;
-(BOOL)isEqualToVector:(id)arg1 ;
-(id)performOperation:(id)arg1 other:(id)arg2 ;
@end

