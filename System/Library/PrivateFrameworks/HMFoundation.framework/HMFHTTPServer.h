/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:23 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HMFoundation/_HMFCFHTTPServerDelegate.h>
#import <HMFoundation/HMFHTTPClientConnectionDelegate.h>
#import <HMFoundation/HMFLogging.h>

@protocol HMFHTTPServerDelegate, OS_dispatch_queue;
@class NSMutableArray, _HMFCFHTTPServer, NSString, HMFMutableNetService, NSObject, NSArray;

@interface HMFHTTPServer : NSObject <_HMFCFHTTPServerDelegate, HMFHTTPClientConnectionDelegate, HMFLogging> {

	NSMutableArray* _connections;
	NSMutableArray* _requestHandlers;
	unsigned long long _port;
	double _connectionIdleTimeout;
	_HMFCFHTTPServer* _internal;
	id<HMFHTTPServerDelegate> _delegate;
	NSString* _serviceType;
	NSString* _name;
	unsigned long long _options;
	HMFMutableNetService* _netService;
	NSObject*<OS_dispatch_queue> _clientQueue;
	NSObject*<OS_dispatch_queue> _propertyQueue;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> clientQueue;                //@synthesize clientQueue=_clientQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> propertyQueue;              //@synthesize propertyQueue=_propertyQueue - In the implementation block
@property (nonatomic,retain) _HMFCFHTTPServer * internal;                               //@synthesize internal=_internal - In the implementation block
@property (__weak) id<HMFHTTPServerDelegate> delegate;                                  //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy,readonly) NSString * serviceType;                             //@synthesize serviceType=_serviceType - In the implementation block
@property (nonatomic,copy,readonly) NSString * name;                                    //@synthesize name=_name - In the implementation block
@property (readonly) unsigned long long port;                                           //@synthesize port=_port - In the implementation block
@property (nonatomic,readonly) unsigned long long options;                              //@synthesize options=_options - In the implementation block
@property (assign) double connectionIdleTimeout;                                        //@synthesize connectionIdleTimeout=_connectionIdleTimeout - In the implementation block
@property (nonatomic,readonly) HMFMutableNetService * netService;                       //@synthesize netService=_netService - In the implementation block
@property (copy,readonly) NSArray * connections;                                        //@synthesize connections=_connections - In the implementation block
@property (copy,readonly) NSArray * requestHandlers; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)shortDescription;
+(id)logCategory;
-(void)setDelegate:(id<HMFHTTPServerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(NSString *)debugDescription;
-(id<HMFHTTPServerDelegate>)delegate;
-(NSString *)name;
-(void)stop;
-(unsigned long long)options;
-(id)shortDescription;
-(unsigned long long)port;
-(void)removeConnection:(id)arg1 ;
-(void)addConnection:(id)arg1 ;
-(NSArray *)connections;
-(NSString *)serviceType;
-(void)startWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setInternal:(_HMFCFHTTPServer *)arg1 ;
-(_HMFCFHTTPServer *)internal;
-(id)logIdentifier;
-(NSObject*<OS_dispatch_queue>)clientQueue;
-(NSObject*<OS_dispatch_queue>)propertyQueue;
-(id)descriptionWithPointer:(BOOL)arg1 ;
-(id)initWithServiceType:(id)arg1 name:(id)arg2 port:(unsigned long long)arg3 options:(unsigned long long)arg4 ;
-(void)setConnectionIdleTimeout:(double)arg1 ;
-(HMFMutableNetService *)netService;
-(void)_stopWithError:(id)arg1 ;
-(void)registerRequestHandler:(id)arg1 ;
-(void)server:(id)arg1 didOpenConnection:(id)arg2 ;
-(void)server:(id)arg1 didCloseConnection:(id)arg2 ;
-(void)stopWithError:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveRequest:(id)arg2 ;
-(void)serverDidInvalidate:(id)arg1 ;
-(NSArray *)requestHandlers;
-(void)_handleOpenedConnection:(id)arg1 ;
-(void)_handleClosedConnection:(id)arg1 ;
-(void)_handleReceivedRequest:(id)arg1 connection:(id)arg2 ;
-(void)unregisterRequestHandler:(id)arg1 ;
-(double)connectionIdleTimeout;
@end

