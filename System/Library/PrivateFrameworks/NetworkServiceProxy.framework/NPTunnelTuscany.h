/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:38 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NetworkServiceProxy/NPTunnel.h>

@protocol OS_dispatch_source;
@class NSData, NWTCPConnection, NWUDPSession, NSObject, NSMutableDictionary, NSPNetworkAgent;

@interface NPTunnelTuscany : NPTunnel {

	NSData* _currentDayPass;
	BOOL _disableFastOpen;
	BOOL _disableUDPRace;
	BOOL _disableMultipath;
	BOOL _shouldReportUsage;
	BOOL _isCancelled;
	NWTCPConnection* _connection;
	void* _clientRef;
	unsigned long long _idleTimeout;
	unsigned long long _nextFlowID;
	NWUDPSession* _UDPSession;
	NSData* _UDPDatagram;
	double _connectionTimeout;
	NSObject*<OS_dispatch_source> _connectionTimer;
	/*^block*/id _pendingCancelCompletionHandler;
	NSMutableDictionary* _fallbackCounts;
	/*^block*/id _pendingPingCompletionHandler;
	NSObject*<OS_dispatch_source> _pingTimer;
	NSPNetworkAgent* _pendingAgent;
	NSObject*<OS_dispatch_source> _usageReportTimer;

}

@property (assign) unsigned long long nextFlowID;                               //@synthesize nextFlowID=_nextFlowID - In the implementation block
@property (retain) NWUDPSession * UDPSession;                                   //@synthesize UDPSession=_UDPSession - In the implementation block
@property (retain) NSData * UDPDatagram;                                        //@synthesize UDPDatagram=_UDPDatagram - In the implementation block
@property (assign) BOOL disableMultipath;                                       //@synthesize disableMultipath=_disableMultipath - In the implementation block
@property (assign) double connectionTimeout;                                    //@synthesize connectionTimeout=_connectionTimeout - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> connectionTimer;               //@synthesize connectionTimer=_connectionTimer - In the implementation block
@property (copy) id pendingCancelCompletionHandler;                             //@synthesize pendingCancelCompletionHandler=_pendingCancelCompletionHandler - In the implementation block
@property (readonly) NSMutableDictionary * fallbackCounts;                      //@synthesize fallbackCounts=_fallbackCounts - In the implementation block
@property (assign) BOOL shouldReportUsage;                                      //@synthesize shouldReportUsage=_shouldReportUsage - In the implementation block
@property (copy) id pendingPingCompletionHandler;                               //@synthesize pendingPingCompletionHandler=_pendingPingCompletionHandler - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> pingTimer;                     //@synthesize pingTimer=_pingTimer - In the implementation block
@property (retain) NSPNetworkAgent * pendingAgent;                              //@synthesize pendingAgent=_pendingAgent - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> usageReportTimer;              //@synthesize usageReportTimer=_usageReportTimer - In the implementation block
@property (assign) BOOL isCancelled;                                            //@synthesize isCancelled=_isCancelled - In the implementation block
@property (retain) NWTCPConnection * connection;                                //@synthesize connection=_connection - In the implementation block
@property (readonly) NSData * dayPass; 
@property (readonly) unsigned long long maxFrameSize; 
@property (assign) BOOL disableFastOpen;                                        //@synthesize disableFastOpen=_disableFastOpen - In the implementation block
@property (assign) BOOL disableUDPRace;                                         //@synthesize disableUDPRace=_disableUDPRace - In the implementation block
@property (assign) void* clientRef;                                             //@synthesize clientRef=_clientRef - In the implementation block
@property (readonly) long long currentMTU; 
@property (readonly) unsigned long long idleTimeout;                            //@synthesize idleTimeout=_idleTimeout - In the implementation block
@property (readonly) long long lastWaldoDayPassResult; 
-(void)start;
-(BOOL)isCancelled;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(NWTCPConnection *)connection;
-(void)setConnection:(NWTCPConnection *)arg1 ;
-(void)setIsCancelled:(BOOL)arg1 ;
-(void)pingWithCompletionHandler:(/*^block*/id)arg1 ;
-(BOOL)shouldTunnelFlow:(id)arg1 ;
-(void)acknowledgeData:(unsigned long long)arg1 sentToFlow:(id)arg2 ;
-(void)closeFlow:(id)arg1 withError:(id)arg2 ;
-(unsigned long long)maxDataSendSizeForFlow:(id)arg1 ;
-(id)initWithConfiguration:(id)arg1 delegate:(id)arg2 ;
-(void)setDisableUDPRace:(BOOL)arg1 ;
-(void)setDisableFastOpen:(BOOL)arg1 ;
-(unsigned long long)maxFrameSize;
-(unsigned long long)initialWindowSize;
-(void)setClientRef:(void*)arg1 ;
-(void*)clientRef;
-(void)cancelConnectionTimer;
-(BOOL)handleReadData:(id)arg1 ;
-(void)createTuscanyClient;
-(BOOL)createConnectionWithInitialData:(id)arg1 ;
-(NSData *)dayPass;
-(long long)currentMTU;
-(BOOL)canHandleMoreData;
-(void)readMinimumBytes:(unsigned long long)arg1 maximumBytes:(unsigned long long)arg2 ;
-(void)writeDataToConnection:(id)arg1 ;
-(void)startConnectionTimer;
-(BOOL)isConnectionAlive;
-(double)timeIntervalSinceLastUsage;
-(BOOL)disableFastOpen;
-(BOOL)disableUDPRace;
-(void)sendDataOnUDPSession:(id)arg1 ;
-(void)sendUsageReportWithSuccess:(BOOL)arg1 rtt:(unsigned long long)arg2 geohash:(id)arg3 fallbackReason:(long long)arg4 ;
-(void)cancelConnection;
-(id)handleFlowClosed:(unsigned long long)arg1 withError:(id)arg2 ;
-(void)checkForStaleWaldo:(unsigned)arg1 ;
-(void)handlePingResponseRTT:(unsigned long long)arg1 geohash:(id)arg2 ;
-(unsigned long long)serviceIDForFlow:(id)arg1 ;
-(long long)lastWaldoDayPassResult;
-(long long)currentEdgeType;
-(id)createConnectionInfo;
-(long long)sendData:(id)arg1 forFlow:(id)arg2 packetsSent:(long long*)arg3 ;
-(void)handleFlowUsedTunnel;
-(void)handleFallbackForFlow:(id)arg1 ;
-(void)setShouldReportUsage:(BOOL)arg1 ;
-(void)setUsageReportTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)usageReportTimer;
-(void)handleConnectionError;
-(void)destroyConnection;
-(id)pendingCancelCompletionHandler;
-(void)setPendingCancelCompletionHandler:(id)arg1 ;
-(BOOL)setupWithConfiguration:(id)arg1 ;
-(BOOL)disableMultipath;
-(double)connectionTimeout;
-(NSObject*<OS_dispatch_source>)connectionTimer;
-(void)setConnectionTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(BOOL)shouldReportUsage;
-(NWUDPSession *)UDPSession;
-(void)setUDPSession:(NWUDPSession *)arg1 ;
-(void)createUDPSession;
-(void)setUDPDatagram:(NSData *)arg1 ;
-(void)handleUDPSessionStateChanged;
-(NSData *)UDPDatagram;
-(NSMutableDictionary *)fallbackCounts;
-(void)handleDisconnected;
-(NSObject*<OS_dispatch_source>)pingTimer;
-(void)setPingTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(id)pendingPingCompletionHandler;
-(void)setPendingPingCompletionHandler:(id)arg1 ;
-(NSPNetworkAgent *)pendingAgent;
-(void)handleAgentUpdate:(id)arg1 ;
-(void)handleConnectionStateChanged;
-(unsigned long long)nextFlowID;
-(void)setNextFlowID:(unsigned long long)arg1 ;
-(void)setPendingAgent:(NSPNetworkAgent *)arg1 ;
-(void)handleNetworkChange;
-(unsigned long long)allocateFlowID;
-(void)cancelWithCompletionHandler:(/*^block*/id)arg1 ;
-(unsigned long long)idleTimeout;
-(void)setDisableMultipath:(BOOL)arg1 ;
-(void)setConnectionTimeout:(double)arg1 ;
@end

