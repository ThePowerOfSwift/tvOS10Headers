/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:38 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NetworkServiceProxy/NetworkServiceProxy-Structs.h>
#import <NetworkServiceProxy/NPTunnelFlowTCP.h>

@protocol OS_dispatch_data;
@class NSObject, NSError;

@interface NPTunnelFlowProtocol : NPTunnelFlowTCP {

	BOOL _disconnectedByApp;
	BOOL _disconnectedByTunnel;
	nw_protocol* _input_protocol;
	NSObject*<OS_dispatch_data> _inputBuffer;
	NSError* _lastError;

}

@property (assign) nw_protocol* input_protocol;                          //@synthesize input_protocol=_input_protocol - In the implementation block
@property (assign) BOOL disconnectedByApp;                               //@synthesize disconnectedByApp=_disconnectedByApp - In the implementation block
@property (assign) BOOL disconnectedByTunnel;                            //@synthesize disconnectedByTunnel=_disconnectedByTunnel - In the implementation block
@property (retain) NSObject*<OS_dispatch_data> inputBuffer;              //@synthesize inputBuffer=_inputBuffer - In the implementation block
@property (retain) NSError * lastError;                                  //@synthesize lastError=_lastError - In the implementation block
+(void)initializeProtocol;
-(void)connect;
-(void)disconnect;
-(void)setInputBuffer:(NSObject*<OS_dispatch_data>)arg1 ;
-(NSObject*<OS_dispatch_data>)inputBuffer;
-(NSError *)lastError;
-(void)setLastError:(NSError *)arg1 ;
-(id)appData;
-(void)setAppData:(id)arg1 ;
-(void)sendDataToClient:(id)arg1 fromTunnel:(BOOL)arg2 ;
-(void)readDataFromClient;
-(void)closeClientFlowWithError:(id)arg1 ;
-(BOOL)isClientFlowClosed;
-(void)setDisconnectedByApp:(BOOL)arg1 ;
-(BOOL)disconnectedByTunnel;
-(void)setDisconnectedByTunnel:(BOOL)arg1 ;
-(nw_protocol*)input_protocol;
-(BOOL)disconnectedByApp;
-(BOOL)addBufferToFrameArray:(nw_frame_array_s*)arg1 bufferSize:(unsigned long long)arg2 ;
-(id)initWithTunnel:(id)arg1 appRule:(id)arg2 inputHandler:(nw_protocol*)arg3 delegate:(id)arg4 ;
-(void)detachFromInputProtocol;
-(unsigned)addInputFramesToArray:(nw_frame_array_s*)arg1 limitMinimumBytes:(unsigned)arg2 limitMaximumBytes:(unsigned)arg3 limitMaximumFrames:(unsigned)arg4 ;
-(unsigned)addOutputFramesToArray:(nw_frame_array_s*)arg1 limitMinimumBytes:(unsigned)arg2 limitMaximumBytes:(unsigned)arg3 limitMaximumFrames:(unsigned)arg4 ;
-(void)handleOutputFrame:(id)arg1 send:(BOOL)arg2 ;
-(void)setInput_protocol:(nw_protocol*)arg1 ;
@end

