/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:38 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NWNetworkAgent.h>

@protocol NSPNetworkAgentDelegate;
@class NSString, NSUUID, NEConfiguration, NSData;

@interface NSPNetworkAgent : NSObject <NWNetworkAgent> {

	BOOL active;
	BOOL kernelActivated;
	BOOL userActivated;
	BOOL voluntary;
	NSUUID* agentUUID;
	NSString* agentDescription;
	NEConfiguration* _configuration;
	id<NSPNetworkAgentDelegate> _delegate;
	NSData* _agentData;
	NSData* _internalKeybag;

}

@property (retain) NSData * agentData;                                                   //@synthesize agentData=_agentData - In the implementation block
@property (retain) NSData * internalKeybag;                                              //@synthesize internalKeybag=_internalKeybag - In the implementation block
@property (retain) NEConfiguration * configuration;                                      //@synthesize configuration=_configuration - In the implementation block
@property (retain) NSData * keybag; 
@property (__weak) id<NSPNetworkAgentDelegate> delegate;                                 //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) NSString * agentDescription; 
@property (nonatomic,copy) NSUUID * agentUUID; 
@property (assign,getter=isActive,nonatomic) BOOL active; 
@property (assign,getter=isKernelActivated,nonatomic) BOOL kernelActivated; 
@property (assign,getter=isUserActivated,nonatomic) BOOL userActivated; 
@property (assign,getter=isVoluntary,nonatomic) BOOL voluntary; 
@property (assign,getter=isSpecificUseOnly,nonatomic) BOOL specificUseOnly; 
@property (assign,getter=isNetworkProvider,nonatomic) BOOL networkProvider; 
@property (assign,getter=isNexusProvider,nonatomic) BOOL nexusProvider; 
+(id)agentDomain;
+(id)agentType;
+(id)agentFromData:(id)arg1 ;
-(NSData *)keybag;
-(void)setDelegate:(id<NSPNetworkAgentDelegate>)arg1 ;
-(id)init;
-(id<NSPNetworkAgentDelegate>)delegate;
-(BOOL)isActive;
-(void)setActive:(BOOL)arg1 ;
-(void)setConfiguration:(NEConfiguration *)arg1 ;
-(NEConfiguration *)configuration;
-(id)copyAgentData;
-(BOOL)assertAgentWithOptions:(id)arg1 ;
-(void)unassertAgentWithOptions:(id)arg1 ;
-(NSString *)agentDescription;
-(void)setAgentDescription:(NSString *)arg1 ;
-(NSUUID *)agentUUID;
-(void)setAgentUUID:(NSUUID *)arg1 ;
-(BOOL)isKernelActivated;
-(void)setKernelActivated:(BOOL)arg1 ;
-(BOOL)isUserActivated;
-(void)setUserActivated:(BOOL)arg1 ;
-(BOOL)isVoluntary;
-(void)setVoluntary:(BOOL)arg1 ;
-(void)setAgentData:(NSData *)arg1 ;
-(NSData *)agentData;
-(void)setInternalKeybag:(NSData *)arg1 ;
-(NSData *)internalKeybag;
-(id)copyConfiguration;
-(void)setKeybag:(NSData *)arg1 ;
@end

