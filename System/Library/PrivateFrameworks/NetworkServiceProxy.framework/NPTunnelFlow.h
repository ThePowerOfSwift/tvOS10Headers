/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:38 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol NPTunnelFlowDelegate, OS_dispatch_queue, OS_dispatch_data, OS_dispatch_source;
@class NWEndpoint, NPTunnel, NSPAppRule, NEAppProxyFlow, NSObject, NSString, NSDate, NSMutableDictionary, NSPConnectionInfo, NetworkServiceProxyRequestStats, NSData;

@interface NPTunnelFlow : NSObject {

	NWEndpoint* _remoteEndpoint;
	BOOL _useCustomHostnameValidation;
	BOOL _isDirectConnectionViable;
	BOOL _fallbackDisabled;
	BOOL _hasTunnel;
	unsigned long long _identifier;
	id<NPTunnelFlowDelegate> _delegate;
	NPTunnel* _tunnel;
	NSPAppRule* _appRule;
	NEAppProxyFlow* _clientFlow;
	long long _state;
	NSObject*<OS_dispatch_queue> _queue;
	void* _window;
	NSString* _remoteHostname;
	unsigned long long _hashKey;
	long long _fallbackReason;
	long long _edgeType;
	NSDate* _startDate;
	NSDate* _firstTxByteTimestamp;
	NSMutableDictionary* _extraFlowProperties;
	NSPConnectionInfo* _finalConnectionInfo;
	NetworkServiceProxyRequestStats* _stats;
	NSObject*<OS_dispatch_data> _savedData;
	long long _latestByteDate;
	NSMutableDictionary* _metrics;
	NSObject*<OS_dispatch_source> _fallbackTimer;

}

@property (retain) NSObject*<OS_dispatch_queue> queue;                       //@synthesize queue=_queue - In the implementation block
@property (retain) NSObject*<OS_dispatch_data> savedData;                    //@synthesize savedData=_savedData - In the implementation block
@property (assign) long long latestByteDate;                                 //@synthesize latestByteDate=_latestByteDate - In the implementation block
@property (retain) NSMutableDictionary * metrics;                            //@synthesize metrics=_metrics - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> fallbackTimer;              //@synthesize fallbackTimer=_fallbackTimer - In the implementation block
@property (assign) unsigned long long identifier;                            //@synthesize identifier=_identifier - In the implementation block
@property (__weak,readonly) id<NPTunnelFlowDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
@property (readonly) NPTunnel * tunnel;                                      //@synthesize tunnel=_tunnel - In the implementation block
@property (readonly) NSPAppRule * appRule;                                   //@synthesize appRule=_appRule - In the implementation block
@property (readonly) NEAppProxyFlow * clientFlow;                            //@synthesize clientFlow=_clientFlow - In the implementation block
@property (retain) NSData * appData; 
@property (assign) long long state;                                          //@synthesize state=_state - In the implementation block
@property (assign) void* window;                                             //@synthesize window=_window - In the implementation block
@property (retain) NWEndpoint * remoteEndpoint; 
@property (readonly) NSString * sourceAppIdentifier; 
@property (assign) BOOL useCustomHostnameValidation;                         //@synthesize useCustomHostnameValidation=_useCustomHostnameValidation - In the implementation block
@property (retain) NSString * remoteHostname;                                //@synthesize remoteHostname=_remoteHostname - In the implementation block
@property (assign) BOOL isDirectConnectionViable;                            //@synthesize isDirectConnectionViable=_isDirectConnectionViable - In the implementation block
@property (readonly) unsigned long long hashKey;                             //@synthesize hashKey=_hashKey - In the implementation block
@property (assign) BOOL fallbackDisabled;                                    //@synthesize fallbackDisabled=_fallbackDisabled - In the implementation block
@property (assign) BOOL hasTunnel;                                           //@synthesize hasTunnel=_hasTunnel - In the implementation block
@property (assign) long long fallbackReason;                                 //@synthesize fallbackReason=_fallbackReason - In the implementation block
@property (assign) long long edgeType;                                       //@synthesize edgeType=_edgeType - In the implementation block
@property (readonly) NSDate * startDate;                                     //@synthesize startDate=_startDate - In the implementation block
@property (retain) NSDate * firstTxByteTimestamp;                            //@synthesize firstTxByteTimestamp=_firstTxByteTimestamp - In the implementation block
@property (retain) NSMutableDictionary * extraFlowProperties;                //@synthesize extraFlowProperties=_extraFlowProperties - In the implementation block
@property (readonly) BOOL isClientFlowClosed; 
@property (readonly) unsigned long long currentMaxSendDataSize; 
@property (retain) NSPConnectionInfo * finalConnectionInfo;                  //@synthesize finalConnectionInfo=_finalConnectionInfo - In the implementation block
@property (readonly) NetworkServiceProxyRequestStats * stats;                //@synthesize stats=_stats - In the implementation block
@property (readonly) BOOL isBestEffort; 
-(void)dealloc;
-(void*)window;
-(id<NPTunnelFlowDelegate>)delegate;
-(long long)state;
-(void)setState:(long long)arg1 ;
-(unsigned long long)identifier;
-(void)setWindow:(void*)arg1 ;
-(void)setIdentifier:(unsigned long long)arg1 ;
-(void)setEdgeType:(long long)arg1 ;
-(long long)edgeType;
-(NSMutableDictionary *)metrics;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSDate *)startDate;
-(NSString *)remoteHostname;
-(NSString *)sourceAppIdentifier;
-(NetworkServiceProxyRequestStats *)stats;
-(void)setMetrics:(NSMutableDictionary *)arg1 ;
-(void)closeWithError:(id)arg1 ;
-(NWEndpoint *)remoteEndpoint;
-(NSData *)appData;
-(void)setAppData:(NSData *)arg1 ;
-(NPTunnel *)tunnel;
-(void)closeFromTunnelWithError:(id)arg1 ;
-(void)handleData:(id)arg1 andError:(id)arg2 ;
-(void)closeFromDirectConnectionWithError:(id)arg1 ;
-(void)setFirstTxByteTimestamp:(NSDate *)arg1 ;
-(NSDate *)firstTxByteTimestamp;
-(NEAppProxyFlow *)clientFlow;
-(unsigned long long)hashKey;
-(void)setIsDirectConnectionViable:(BOOL)arg1 ;
-(void)sendDataToClient:(id)arg1 fromTunnel:(BOOL)arg2 ;
-(void)handleAppData:(id)arg1 andError:(id)arg2 ;
-(void)setRemoteEndpoint:(NWEndpoint *)arg1 ;
-(BOOL)isDirectConnectionViable;
-(void)readDataFromClient;
-(BOOL)fallbackDisabled;
-(NSPAppRule *)appRule;
-(BOOL)shouldSendDataToClient:(id)arg1 fromTunnel:(BOOL)arg2 ;
-(void)setFallbackDisabled:(BOOL)arg1 ;
-(BOOL)hasTunnel;
-(void)startDirectConnection;
-(void)stopDirectConnection;
-(unsigned long long)currentMaxSendDataSize;
-(long long)fallbackReason;
-(id)initWithTunnel:(id)arg1 appRule:(id)arg2 clientFlow:(id)arg3 hashKey:(unsigned long long)arg4 delegate:(id)arg5 ;
-(void)closeClientFlowWithError:(id)arg1 ;
-(BOOL)isClientFlowClosed;
-(void)setFlowFallbackReason:(long long)arg1 ;
-(BOOL)isBestEffort;
-(void)setRemoteHostname:(NSString *)arg1 ;
-(void)setUseCustomHostnameValidation:(BOOL)arg1 ;
-(void)getMetricsWithCompletionHandler:(/*^block*/id)arg1 ;
-(NSObject*<OS_dispatch_data>)savedData;
-(void)setSavedData:(NSObject*<OS_dispatch_data>)arg1 ;
-(NSMutableDictionary *)extraFlowProperties;
-(void)setFallbackTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)fallbackTimer;
-(void)setLatestByteDate:(long long)arg1 ;
-(void)handleTunnelCanHandleMoreData;
-(long long)latestByteDate;
-(void)setFinalConnectionInfo:(NSPConnectionInfo *)arg1 ;
-(void)reportMetrics;
-(void)getLatestConnectionInfoWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setHasTunnel:(BOOL)arg1 ;
-(NSPConnectionInfo *)finalConnectionInfo;
-(void)processConnectionInfo:(id)arg1 ;
-(void)setExtraFlowProperties:(NSMutableDictionary *)arg1 ;
-(void)setFallbackReason:(long long)arg1 ;
-(void)increaseWindowSize:(unsigned long long)arg1 ;
-(void)handleTunnelDisconnected;
-(void)getConnectionInfoWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)updateAppData;
-(BOOL)useCustomHostnameValidation;
@end

