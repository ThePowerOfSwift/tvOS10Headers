/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:09:38 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSSecureCoding.h>

@protocol NPWaldoDelegate, OS_dispatch_source;
@class NSDictionary, NPLocation, NSDate, NSArray, NSString, NSURL, NSMutableDictionary, NSData, NPTuscanyEdge, NSObject;

@interface NPWaldo : NSObject <NSSecureCoding> {

	NSDictionary* _currentNetworkCharacteristics;
	BOOL _enableLatencyDerivationFromWaldo;
	BOOL _enableLatencyDerivation;
	BOOL _shouldSave;
	BOOL _dayPassExtendedValidationFromWaldo;
	BOOL _dayPassExtendedValidation;
	BOOL _useGeohashFromServer;
	BOOL _daypassRefreshInProgress;
	BOOL _reprocessPending;
	BOOL _reprocessCancelled;
	BOOL _reprocessAfterCancelled;
	unsigned _timestamp;
	unsigned _lastFailureReason;
	unsigned _generation;
	long long _currentEdgeIndex;
	NSDictionary* _nextProbeDates;
	double _probeFrequency;
	id<NPWaldoDelegate> _delegate;
	double _latencyFactorA;
	double _latencyFactorB;
	double _latencyFactorX;
	NPLocation* _cachedLocation;
	NSDate* _locationCheckTimestamp;
	NSDate* _locationExpiration;
	NSArray* _edges;
	double _edgeFairnessFactor;
	long long _locationCheckInterval;
	long long _locationTTL;
	long long _locationToleranceDistance;
	long long _viewSize;
	long long _probePause;
	long long _signatureLimit;
	long long _fallbackTimeout;
	long long _connectionTimeout;
	long long _connectionIdleTimeout;
	NSString* _dayPassHostname;
	NSString* _tag;
	NSURL* _telemetryURL;
	NSString* _telemetryService;
	double _telemetryRatio;
	NSDate* _resurrectionDate;
	NSMutableDictionary* _signatureEdgeLists;
	NSMutableDictionary* _signatureReprocessRateLimits;
	NSMutableDictionary* _networkInformation;
	NSArray* _currentEdges;
	long long _retryPause;
	long long _reprocessSamplingInterval;
	long long _reprocessSampleSize;
	long long _observedRTTSampleSize;
	NSData* _dayPass;
	NPTuscanyEdge* _nextEdge;
	unsigned long long _version;
	NSArray* _daypassSoftExpiry;
	NSObject*<OS_dispatch_source> _reprocessSamplingTimer;
	long long _reprocessSampleCount;
	unsigned long long _diskVersion;

}

@property (retain) NSMutableDictionary * signatureEdgeLists;                          //@synthesize signatureEdgeLists=_signatureEdgeLists - In the implementation block
@property (retain) NSMutableDictionary * signatureReprocessRateLimits;                //@synthesize signatureReprocessRateLimits=_signatureReprocessRateLimits - In the implementation block
@property (retain) NSMutableDictionary * networkInformation;                          //@synthesize networkInformation=_networkInformation - In the implementation block
@property (assign) BOOL daypassRefreshInProgress;                                     //@synthesize daypassRefreshInProgress=_daypassRefreshInProgress - In the implementation block
@property (readonly) NSArray * currentEdges;                                          //@synthesize currentEdges=_currentEdges - In the implementation block
@property (readonly) long long retryPause;                                            //@synthesize retryPause=_retryPause - In the implementation block
@property (readonly) long long reprocessSamplingInterval;                             //@synthesize reprocessSamplingInterval=_reprocessSamplingInterval - In the implementation block
@property (readonly) long long reprocessSampleSize;                                   //@synthesize reprocessSampleSize=_reprocessSampleSize - In the implementation block
@property (readonly) long long observedRTTSampleSize;                                 //@synthesize observedRTTSampleSize=_observedRTTSampleSize - In the implementation block
@property (assign) long long currentEdgeIndex;                                        //@synthesize currentEdgeIndex=_currentEdgeIndex - In the implementation block
@property (retain) NSData * dayPass;                                                  //@synthesize dayPass=_dayPass - In the implementation block
@property (readonly) NPTuscanyEdge * nextEdge;                                        //@synthesize nextEdge=_nextEdge - In the implementation block
@property (readonly) NSArray * currentEdgeList; 
@property (readonly) unsigned long long version;                                      //@synthesize version=_version - In the implementation block
@property (readonly) NSArray * daypassSoftExpiry;                                     //@synthesize daypassSoftExpiry=_daypassSoftExpiry - In the implementation block
@property (assign) BOOL reprocessPending;                                             //@synthesize reprocessPending=_reprocessPending - In the implementation block
@property (assign) BOOL reprocessCancelled;                                           //@synthesize reprocessCancelled=_reprocessCancelled - In the implementation block
@property (assign) BOOL reprocessAfterCancelled;                                      //@synthesize reprocessAfterCancelled=_reprocessAfterCancelled - In the implementation block
@property (assign) unsigned generation;                                               //@synthesize generation=_generation - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> reprocessSamplingTimer;              //@synthesize reprocessSamplingTimer=_reprocessSamplingTimer - In the implementation block
@property (assign) long long reprocessSampleCount;                                    //@synthesize reprocessSampleCount=_reprocessSampleCount - In the implementation block
@property (readonly) unsigned long long diskVersion;                                  //@synthesize diskVersion=_diskVersion - In the implementation block
@property (readonly) NPTuscanyEdge * currentEdge; 
@property (readonly) unsigned long long edgeCount; 
@property (readonly) BOOL hasEdges; 
@property (readonly) long long dayPassFetchCount; 
@property (readonly) NSDate * currentNetworkLastUsed; 
@property (retain) NSDictionary * nextProbeDates;                                     //@synthesize nextProbeDates=_nextProbeDates - In the implementation block
@property (readonly) double probeFrequency;                                           //@synthesize probeFrequency=_probeFrequency - In the implementation block
@property (__weak) id<NPWaldoDelegate> delegate;                                      //@synthesize delegate=_delegate - In the implementation block
@property (assign) BOOL enableLatencyDerivationFromWaldo;                             //@synthesize enableLatencyDerivationFromWaldo=_enableLatencyDerivationFromWaldo - In the implementation block
@property (assign) BOOL enableLatencyDerivation;                                      //@synthesize enableLatencyDerivation=_enableLatencyDerivation - In the implementation block
@property (assign) double latencyFactorA;                                             //@synthesize latencyFactorA=_latencyFactorA - In the implementation block
@property (assign) double latencyFactorB;                                             //@synthesize latencyFactorB=_latencyFactorB - In the implementation block
@property (assign) double latencyFactorX;                                             //@synthesize latencyFactorX=_latencyFactorX - In the implementation block
@property (readonly) unsigned timestamp;                                              //@synthesize timestamp=_timestamp - In the implementation block
@property (assign) BOOL shouldSave;                                                   //@synthesize shouldSave=_shouldSave - In the implementation block
@property (assign) unsigned lastFailureReason;                                        //@synthesize lastFailureReason=_lastFailureReason - In the implementation block
@property (readonly) NSDate * expirationDate; 
@property (readonly) unsigned long long probeSize; 
@property (retain) NPLocation * cachedLocation;                                       //@synthesize cachedLocation=_cachedLocation - In the implementation block
@property (retain) NSDate * locationCheckTimestamp;                                   //@synthesize locationCheckTimestamp=_locationCheckTimestamp - In the implementation block
@property (retain) NSDate * locationExpiration;                                       //@synthesize locationExpiration=_locationExpiration - In the implementation block
@property (retain) NSArray * edges;                                                   //@synthesize edges=_edges - In the implementation block
@property (assign) double edgeFairnessFactor;                                         //@synthesize edgeFairnessFactor=_edgeFairnessFactor - In the implementation block
@property (assign) long long locationCheckInterval;                                   //@synthesize locationCheckInterval=_locationCheckInterval - In the implementation block
@property (assign) long long locationTTL;                                             //@synthesize locationTTL=_locationTTL - In the implementation block
@property (assign) long long locationToleranceDistance;                               //@synthesize locationToleranceDistance=_locationToleranceDistance - In the implementation block
@property (assign) long long viewSize;                                                //@synthesize viewSize=_viewSize - In the implementation block
@property (assign) long long probePause;                                              //@synthesize probePause=_probePause - In the implementation block
@property (assign) long long signatureLimit;                                          //@synthesize signatureLimit=_signatureLimit - In the implementation block
@property (assign) long long fallbackTimeout;                                         //@synthesize fallbackTimeout=_fallbackTimeout - In the implementation block
@property (assign) long long connectionTimeout;                                       //@synthesize connectionTimeout=_connectionTimeout - In the implementation block
@property (assign) long long connectionIdleTimeout;                                   //@synthesize connectionIdleTimeout=_connectionIdleTimeout - In the implementation block
@property (assign) BOOL dayPassExtendedValidationFromWaldo;                           //@synthesize dayPassExtendedValidationFromWaldo=_dayPassExtendedValidationFromWaldo - In the implementation block
@property (assign) BOOL dayPassExtendedValidation;                                    //@synthesize dayPassExtendedValidation=_dayPassExtendedValidation - In the implementation block
@property (retain) NSString * dayPassHostname;                                        //@synthesize dayPassHostname=_dayPassHostname - In the implementation block
@property (readonly) NSString * tag;                                                  //@synthesize tag=_tag - In the implementation block
@property (retain) NSURL * telemetryURL;                                              //@synthesize telemetryURL=_telemetryURL - In the implementation block
@property (retain) NSString * telemetryService;                                       //@synthesize telemetryService=_telemetryService - In the implementation block
@property (assign) double telemetryRatio;                                             //@synthesize telemetryRatio=_telemetryRatio - In the implementation block
@property (readonly) NSDate * resurrectionDate;                                       //@synthesize resurrectionDate=_resurrectionDate - In the implementation block
@property (readonly) BOOL useGeohashFromServer;                                       //@synthesize useGeohashFromServer=_useGeohashFromServer - In the implementation block
+(BOOL)supportsSecureCoding;
+(id)removeFromKeychain;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id<NPWaldoDelegate>)arg1 ;
-(id)description;
-(id<NPWaldoDelegate>)delegate;
-(unsigned)timestamp;
-(void)setEdges:(NSArray *)arg1 ;
-(NSString *)tag;
-(unsigned long long)edgeCount;
-(void)setConstraint:(id)arg1 ;
-(unsigned long long)version;
-(NSArray *)edges;
-(long long)viewSize;
-(NSDate *)expirationDate;
-(void)setGeneration:(unsigned)arg1 ;
-(unsigned)generation;
-(NPLocation *)cachedLocation;
-(void)setCachedLocation:(NPLocation *)arg1 ;
-(void)setConnectionIdleTimeout:(long long)arg1 ;
-(void)setShouldSave:(BOOL)arg1 ;
-(BOOL)shouldSave;
-(void)setViewSize:(long long)arg1 ;
-(NSData *)dayPass;
-(void)setDayPass:(NSData *)arg1 ;
-(long long)fallbackTimeout;
-(void)setFallbackTimeout:(long long)arg1 ;
-(void)setTelemetryService:(NSString *)arg1 ;
-(void)setTelemetryURL:(NSURL *)arg1 ;
-(void)setTelemetryRatio:(double)arg1 ;
-(long long)connectionTimeout;
-(void)setConnectionTimeout:(long long)arg1 ;
-(NSString *)telemetryService;
-(NSURL *)telemetryURL;
-(double)telemetryRatio;
-(BOOL)pushCurrentDayPassesToKernelUpdateGeneration:(BOOL)arg1 ;
-(void)setEnableLatencyDerivation:(BOOL)arg1 ;
-(long long)currentEdgeIndex;
-(long long)retryPause;
-(long long)probePause;
-(double)probeFrequency;
-(NSDictionary *)nextProbeDates;
-(NSMutableDictionary *)signatureEdgeLists;
-(NSMutableDictionary *)signatureReprocessRateLimits;
-(NSMutableDictionary *)networkInformation;
-(NSArray *)daypassSoftExpiry;
-(BOOL)enableLatencyDerivationFromWaldo;
-(BOOL)enableLatencyDerivation;
-(double)latencyFactorX;
-(double)latencyFactorA;
-(double)latencyFactorB;
-(double)edgeFairnessFactor;
-(unsigned)lastFailureReason;
-(long long)observedRTTSampleSize;
-(long long)reprocessSamplingInterval;
-(long long)reprocessSampleSize;
-(long long)locationCheckInterval;
-(long long)locationToleranceDistance;
-(long long)locationTTL;
-(NSDate *)locationCheckTimestamp;
-(unsigned long long)diskVersion;
-(long long)connectionIdleTimeout;
-(NSString *)dayPassHostname;
-(BOOL)dayPassExtendedValidationFromWaldo;
-(BOOL)dayPassExtendedValidation;
-(NSDate *)resurrectionDate;
-(BOOL)useGeohashFromServer;
-(id)edgeAtIndex:(long long)arg1 ;
-(void)ageOutLatencyMap;
-(long long)dayPassFetchCount;
-(BOOL)hasEdges;
-(void)setLastFailureReason:(unsigned)arg1 ;
-(void)saveToKeychain;
-(long long)signatureLimit;
-(void)timestampNetworkSignature:(id)arg1 ;
-(unsigned long long)probeSize;
-(id)rebuildLatencyMap:(id)arg1 latencyMap:(id)arg2 ;
-(void)setSignatureEdgeLists:(NSMutableDictionary *)arg1 ;
-(NSArray *)currentEdgeList;
-(void)setCurrentEdgeIndex:(long long)arg1 ;
-(BOOL)reprocessWithNewRTT:(unsigned long long)arg1 reProbe:(BOOL*)arg2 ;
-(BOOL)shouldPerformDayPassRefresh;
-(void)refreshDayPassesWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)reprocessWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setNetworkInformation:(NSMutableDictionary *)arg1 ;
-(void)cancelProbes;
-(BOOL)reprocessPending;
-(void)setEdgeListForCurrentNetworkSignature:(id)arg1 ;
-(void)setReprocessCancelled:(BOOL)arg1 ;
-(BOOL)reprocessCancelled;
-(void)setReprocessAfterCancelled:(BOOL)arg1 ;
-(BOOL)shouldReprocess;
-(void)setReprocessPending:(BOOL)arg1 ;
-(void)setReprocessSampleCount:(long long)arg1 ;
-(BOOL)reprocessAfterCancelled;
-(void)reprocessSamplingWithCompletionHandler:(/*^block*/id)arg1 fromScratch:(BOOL)arg2 ;
-(long long)reprocessSampleCount;
-(void)logEdgeList:(id)arg1 debug:(BOOL)arg2 toStdout:(BOOL)arg3 ;
-(BOOL)validateEdgeList:(id)arg1 ;
-(void)setReprocessSamplingTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)reprocessSamplingTimer;
-(void)loadObservedRTTSamples:(id)arg1 ;
-(void)startProbingEdges:(id)arg1 atIndex:(unsigned long long)arg2 withResults:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(NPTuscanyEdge *)currentEdge;
-(id)getLatencyFromList:(id)arg1 edgeIndex:(unsigned long long)arg2 ;
-(void)setSignatureReprocessRateLimits:(NSMutableDictionary *)arg1 ;
-(long long)indexOfBestEdge;
-(void)getDayPassRTT;
-(id)copyEdgeList:(id)arg1 ;
-(id)copyEdgeListRTTAverage:(id)arg1 observed:(BOOL)arg2 shortDescription:(BOOL)arg3 ;
-(id)initWithJSONData:(id)arg1 timestamp:(unsigned)arg2 softExpiryOverride:(id)arg3 ;
-(id)initFromKeychain;
-(void)clearAllLatencyMaps;
-(BOOL)rebuildLatencyMaps:(id)arg1 ;
-(void)handleKeyUsageUpdate:(id)arg1 appData:(id)arg2 ;
-(void)retainValidDayPassesFromWaldoInfo:(id)arg1 ;
-(void)setCurrentNetworkCharacteristics:(id)arg1 ;
-(BOOL)shouldFetchWaldo;
-(void)logLatencyInfoToStdout:(BOOL)arg1 ;
-(id)copyLatencyInfoDictionary:(BOOL)arg1 ;
-(NSDate *)currentNetworkLastUsed;
-(id)edgeContainingOnRamp:(id)arg1 ;
-(id)copyStateIncludeDistance:(BOOL)arg1 ;
-(void)setNextProbeDates:(NSDictionary *)arg1 ;
-(void)setEnableLatencyDerivationFromWaldo:(BOOL)arg1 ;
-(void)setLatencyFactorA:(double)arg1 ;
-(void)setLatencyFactorB:(double)arg1 ;
-(void)setLatencyFactorX:(double)arg1 ;
-(void)setLocationCheckTimestamp:(NSDate *)arg1 ;
-(NSDate *)locationExpiration;
-(void)setLocationExpiration:(NSDate *)arg1 ;
-(void)setEdgeFairnessFactor:(double)arg1 ;
-(void)setLocationCheckInterval:(long long)arg1 ;
-(void)setLocationTTL:(long long)arg1 ;
-(void)setLocationToleranceDistance:(long long)arg1 ;
-(void)setProbePause:(long long)arg1 ;
-(void)setSignatureLimit:(long long)arg1 ;
-(void)setDayPassExtendedValidationFromWaldo:(BOOL)arg1 ;
-(void)setDayPassExtendedValidation:(BOOL)arg1 ;
-(void)setDayPassHostname:(NSString *)arg1 ;
-(BOOL)daypassRefreshInProgress;
-(void)setDaypassRefreshInProgress:(BOOL)arg1 ;
-(NSArray *)currentEdges;
-(NPTuscanyEdge *)nextEdge;
@end

