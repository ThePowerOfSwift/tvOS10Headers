/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:01:47 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/PrivateFrameworks/TextInput.framework/TextInput
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TextInput/TextInput-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/TIKeyboardCandidateCoding.h>

@class NSString, TIProactiveTrigger;

@interface TIKeyboardCandidate : NSObject <NSCopying, NSSecureCoding, TIKeyboardCandidateCoding> {

	unsigned _slotID;
	NSString* _alternativeText;
	NSString* _annotationText;
	unsigned long long _indexForMetrics;

}

@property (nonatomic,readonly) BOOL isSlottedCandidate; 
@property (nonatomic,readonly) NSString * candidate; 
@property (nonatomic,readonly) NSString * input; 
@property (nonatomic,readonly) NSString * label; 
@property (nonatomic,copy) NSString * alternativeText;                                                         //@synthesize alternativeText=_alternativeText - In the implementation block
@property (nonatomic,copy) NSString * annotationText;                                                          //@synthesize annotationText=_annotationText - In the implementation block
@property (nonatomic,readonly) unsigned long long wordOriginFeedbackID; 
@property (nonatomic,readonly) unsigned long long deleteCount; 
@property (nonatomic,readonly) long long cursorMovement; 
@property (nonatomic,readonly) BOOL isForShortcutConversion; 
@property (nonatomic,readonly) BOOL isAutocorrection; 
@property (assign,nonatomic) unsigned slotID;                                                                  //@synthesize slotID=_slotID - In the implementation block
@property (getter=isExtensionCandidate,nonatomic,readonly) BOOL extensionCandidate; 
@property (getter=isEmojiCandidate,nonatomic,readonly) BOOL emojiCandidate; 
@property (getter=isCompletionCandidate,nonatomic,readonly) BOOL completionCandidate; 
@property (getter=isInlineCompletionCandidate,nonatomic,readonly) BOOL inlineCompletionCandidate; 
@property (getter=isFullwidthCandidate,nonatomic,readonly) BOOL fullwidthCandidate; 
@property (nonatomic,readonly) BOOL isSendCurrentLocation; 
@property (getter=isSecureContentCandidate,nonatomic,readonly) BOOL secureContentCandidate; 
@property (nonatomic,retain,readonly) TIProactiveTrigger * proactiveTrigger; 
@property (assign,nonatomic) unsigned long long indexForMetrics;                                               //@synthesize indexForMetrics=_indexForMetrics - In the implementation block
@property (nonatomic,readonly) BOOL isAddress; 
@property (nonatomic,readonly) unsigned usageTrackingMask; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(int)type;
+(BOOL)supportsSecureCoding;
-(BOOL)isSlottedCandidate;
-(id)initWithCandidateResultSetCoder:(id)arg1 ;
-(void)encodeWithCandidateResultSetCoder:(id)arg1 ;
-(BOOL)isEmojiCandidate;
-(unsigned long long)indexForMetrics;
-(void)setIndexForMetrics:(unsigned long long)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)input;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSString *)label;
-(unsigned long long)deleteCount;
-(BOOL)isSecureContentCandidate;
-(unsigned)slotID;
-(NSString *)alternativeText;
-(void)setAlternativeText:(NSString *)arg1 ;
-(NSString *)annotationText;
-(void)setAnnotationText:(NSString *)arg1 ;
-(NSString *)candidate;
-(long long)cursorMovement;
-(BOOL)isForShortcutConversion;
-(BOOL)isExtensionCandidate;
-(BOOL)isCompletionCandidate;
-(BOOL)isInlineCompletionCandidate;
-(BOOL)isFullwidthCandidate;
-(unsigned)usageTrackingMask;
-(unsigned long long)wordOriginFeedbackID;
-(BOOL)isAutocorrection;
-(void)setSlotID:(unsigned)arg1 ;
-(BOOL)isSendCurrentLocation;
-(TIProactiveTrigger *)proactiveTrigger;
-(BOOL)isAddress;
@end

