/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:01:41 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class <MTLTexture>, MTLTextureDescriptor, <MTLDevice>, MPSCommandBufferImageCache;

typedef struct _NSZone* NSZoneRef;

typedef struct {
	unsigned long long field1;
	unsigned long long field2;
	unsigned long long field3;
} SCD_Struct_MP1;

typedef struct MPSPixelInfo {
	unsigned pixelFormat : 10;
	unsigned chunkSize : 6;
	unsigned chunkWidth : 4;
	unsigned chunkHeight : 4;
	unsigned pixelStyle : 4;
	unsigned colorModel : 4;
	unsigned bitDepth : 8;
	unsigned isSigned : 1;
	unsigned isClamped : 1;
	unsigned isInteger : 1;
	unsigned canFilter : 1;
	unsigned canRender : 1;
	unsigned canWrite : 1;
	unsigned canMultisample : 1;
	unsigned isSupported : 1;
	unsigned _padding : 16;
} MPSPixelInfo;

typedef struct MPSAutoTexture {
	<MTLTexture>* _texture;
	MTLTextureDescriptor* _descriptor;
	<MTLDevice>* _device;
	MPSCommandBufferImageCache* _cache;
	int _twiddled;
} MPSAutoTexture;

typedef struct {
	long long x;
	long long y;
	long long z;
} SCD_Struct_MP4;

typedef struct {
	unsigned long long x;
	unsigned long long y;
	unsigned long long z;
} SCD_Struct_MP5;

typedef struct {
	SCD_Struct_MP5 origin;
	SCD_Struct_MP5 size;
} SCD_Struct_MP6;

typedef struct ConversionInfo_s {
	StageData_s stages;
	 bgColor;
	int data;
	float fData;
	int nStages;
	unsigned long long nData;
	unsigned long long nFData;
	int nMatrices;
	int nLuts;
	int nTRCs;
	id texLUTs;
	id trcLUTs;
	id dummyLUTs;
	id devFloatData;
	 <MTLBuffer>;
	int nCHIn;
	int nCHOut;
	BOOL containsATableTRC;
} ConversionInfo_s;

typedef const struct CGColorConversionInfo* CGColorConversionInfoRef;

typedef struct {
	unsigned long long field1;
	BOOL field2;
} SCD_Struct_MP9;

typedef struct MPSScaleTransform {
	double scaleX;
	double scaleY;
	double translateX;
	double translateY;
} MPSScaleTransform;

typedef struct {
	<MTLTexture>* weights;
	double scale;
	double offset;
	unsigned limit;
	unsigned phaseCount;
	float phaseStride;
	float kernelTaps;
	unsigned phaseMask;
	unsigned kernelSize;
} SCD_Struct_MP11;

typedef struct {
	float threshold_value;
	float max_value;
	float matrix[3];
} SCD_Struct_MP12;

