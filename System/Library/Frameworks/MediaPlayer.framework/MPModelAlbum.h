/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:05:34 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <MediaPlayer/MPModelObject.h>

@class NSString, MPModelArtist, MPModelGenre, MPModelSong, NSDateComponents, NSDate;

@interface MPModelAlbum : MPModelObject {

	BOOL _hasCleanContent;
	BOOL _hasExplicitContent;
	BOOL _compilation;
	BOOL _classical;
	BOOL _preorder;
	BOOL _libraryAdded;
	BOOL _libraryAddEligible;
	float _volumeNormalization;
	NSString* _title;
	MPModelArtist* _artist;
	MPModelGenre* _genre;
	MPModelSong* _representativeSong;
	long long _trackCount;
	long long _maximumItemTrackNumber;
	long long _discCount;
	NSDateComponents* _releaseDateComponents;
	long long _year;
	NSString* _copyrightText;
	NSDate* _lastDevicePlaybackDate;
	NSString* _editorNotes;
	NSString* _shortEditorNotes;
	NSDate* _libraryAddedDate;
	long long _keepLocalEnableState;
	long long _keepLocalManagedStatus;
	/*^block*/id _artworkCatalogBlock;
	/*^block*/id _songPopularityBlock;

}

@property (nonatomic,copy) NSString * title;                                                   //@synthesize title=_title - In the implementation block
@property (nonatomic,retain) MPModelArtist * artist;                                           //@synthesize artist=_artist - In the implementation block
@property (nonatomic,retain) MPModelGenre * genre;                                             //@synthesize genre=_genre - In the implementation block
@property (assign,nonatomic) long long trackCount;                                             //@synthesize trackCount=_trackCount - In the implementation block
@property (assign,nonatomic) long long maximumItemTrackNumber;                                 //@synthesize maximumItemTrackNumber=_maximumItemTrackNumber - In the implementation block
@property (assign,nonatomic) long long discCount;                                              //@synthesize discCount=_discCount - In the implementation block
@property (assign,nonatomic) BOOL hasCleanContent;                                             //@synthesize hasCleanContent=_hasCleanContent - In the implementation block
@property (assign,nonatomic) BOOL hasExplicitContent;                                          //@synthesize hasExplicitContent=_hasExplicitContent - In the implementation block
@property (assign,getter=isCompilation,nonatomic) BOOL compilation;                            //@synthesize compilation=_compilation - In the implementation block
@property (assign,getter=isClassical,nonatomic) BOOL classical;                                //@synthesize classical=_classical - In the implementation block
@property (assign,getter=isLibraryAdded,nonatomic) BOOL libraryAdded;                          //@synthesize libraryAdded=_libraryAdded - In the implementation block
@property (nonatomic,copy) NSDate * libraryAddedDate;                                          //@synthesize libraryAddedDate=_libraryAddedDate - In the implementation block
@property (assign,getter=isLibraryAddEligible,nonatomic) BOOL libraryAddEligible;              //@synthesize libraryAddEligible=_libraryAddEligible - In the implementation block
@property (assign,nonatomic) float volumeNormalization;                                        //@synthesize volumeNormalization=_volumeNormalization - In the implementation block
@property (nonatomic,copy) NSDateComponents * releaseDateComponents;                           //@synthesize releaseDateComponents=_releaseDateComponents - In the implementation block
@property (nonatomic,retain) MPModelSong * representativeSong;                                 //@synthesize representativeSong=_representativeSong - In the implementation block
@property (assign,nonatomic) long long year;                                                   //@synthesize year=_year - In the implementation block
@property (nonatomic,copy) id artworkCatalogBlock;                                             //@synthesize artworkCatalogBlock=_artworkCatalogBlock - In the implementation block
@property (nonatomic,copy) NSString * copyrightText;                                           //@synthesize copyrightText=_copyrightText - In the implementation block
@property (assign,nonatomic) long long keepLocalEnableState;                                   //@synthesize keepLocalEnableState=_keepLocalEnableState - In the implementation block
@property (assign,nonatomic) long long keepLocalManagedStatus;                                 //@synthesize keepLocalManagedStatus=_keepLocalManagedStatus - In the implementation block
@property (nonatomic,copy) NSDate * lastDevicePlaybackDate;                                    //@synthesize lastDevicePlaybackDate=_lastDevicePlaybackDate - In the implementation block
@property (assign,getter=isPreorder,nonatomic) BOOL preorder;                                  //@synthesize preorder=_preorder - In the implementation block
@property (nonatomic,copy) NSString * editorNotes;                                             //@synthesize editorNotes=_editorNotes - In the implementation block
@property (nonatomic,copy) NSString * shortEditorNotes;                                        //@synthesize shortEditorNotes=_shortEditorNotes - In the implementation block
@property (nonatomic,copy) id songPopularityBlock;                                             //@synthesize songPopularityBlock=_songPopularityBlock - In the implementation block
+(BOOL)supportsKeepLocalStatusObservation;
+(id)requiredKeepLocalStatusObservationProperties;
+(id)__title__KEY;
+(id)__artist__KEY;
+(id)__genre__KEY;
+(id)__copyrightText__KEY;
+(id)__volumeNormalization__KEY;
+(id)__libraryAdded__KEY;
+(id)__artworkCatalogBlock__KEY;
+(id)__keepLocalEnableState__KEY;
+(id)__keepLocalManagedStatus__KEY;
+(id)__libraryAddEligible__KEY;
+(id)__year__KEY;
+(id)requiredLibraryAddStatusObservationProperties;
+(BOOL)supportsLibraryAddStatusObservation;
+(id)__editorialArtworkCatalogBlock__KEY;
+(id)requiredStoreLibraryPersonalizationProperties;
+(id)__editorNotes__KEY;
+(id)__shortEditorNotes__KEY;
+(id)requiredLibraryRemovalProperties;
+(BOOL)supportsLibraryRemoval;
+(id)__hasCleanContent__KEY;
+(id)__hasExplicitContent__KEY;
+(id)__trackCount__KEY;
+(id)__releaseDateComponents__KEY;
+(id)__libraryAddedDate__KEY;
+(id)__lastDevicePlaybackDate__KEY;
+(id)__MPModelPropertyAlbumTitle__PROPERTY;
+(id)__MPModelRelationshipAlbumArtist__PROPERTY;
+(id)__MPModelRelationshipAlbumGenre__PROPERTY;
+(id)__representativeSong__KEY;
+(id)__MPModelRelationshipAlbumRepresentativeSong__PROPERTY;
+(id)__MPModelPropertyAlbumTrackCount__PROPERTY;
+(id)__maximumItemTrackNumber__KEY;
+(id)__MPModelPropertyAlbumMaximumItemTrackNumber__PROPERTY;
+(id)__discCount__KEY;
+(id)__MPModelPropertyAlbumDiscCount__PROPERTY;
+(id)__MPModelPropertyAlbumHasCleanContent__PROPERTY;
+(id)__MPModelPropertyAlbumHasExplicitContent__PROPERTY;
+(id)__compilation__KEY;
+(id)__MPModelPropertyAlbumIsCompilation__PROPERTY;
+(id)__classical__KEY;
+(id)__MPModelPropertyAlbumIsClassical__PROPERTY;
+(id)__MPModelPropertyAlbumReleaseDateComponents__PROPERTY;
+(id)__MPModelPropertyAlbumArtwork__PROPERTY;
+(id)__MPModelPropertyAlbumCopyrightText__PROPERTY;
+(id)__MPModelPropertyAlbumEditorialArtwork__PROPERTY;
+(id)__MPModelPropertyAlbumLibraryAddedDate__PROPERTY;
+(id)__MPModelPropertyAlbumYear__PROPERTY;
+(id)__MPModelPropertyAlbumLibraryAdded__PROPERTY;
+(id)__MPModelPropertyAlbumVolumeNormalization__PROPERTY;
+(id)__MPModelPropertyAlbumKeepLocalEnableState__PROPERTY;
+(id)__MPModelPropertyAlbumKeepLocalManagedStatus__PROPERTY;
+(id)__MPModelPropertyAlbumLibraryAddEligible__PROPERTY;
+(id)__MPModelPropertyAlbumLastDevicePlaybackDate__PROPERTY;
+(id)__preorder__KEY;
+(id)__MPModelPropertyAlbumPreorder__PROPERTY;
+(id)__MPModelPropertyAlbumEditorNotes__PROPERTY;
+(id)__MPModelPropertyAlbumShortEditorNotes__PROPERTY;
+(id)__songPopularityBlock__KEY;
+(id)__MPModelPropertyAlbumSongPopularity__PROPERTY;
-(void)setTitle:(NSString *)arg1 ;
-(NSString *)title;
-(long long)year;
-(void)setYear:(long long)arg1 ;
-(id)descriptionWithType:(long long)arg1 ;
-(MPModelArtist *)artist;
-(long long)discCount;
-(MPModelGenre *)genre;
-(NSString *)copyrightText;
-(BOOL)isCompilation;
-(BOOL)isPreorder;
-(long long)trackCount;
-(NSString *)editorNotes;
-(NSString *)shortEditorNotes;
-(id)artworkCatalog;
-(void)setEditorNotes:(NSString *)arg1 ;
-(void)setShortEditorNotes:(NSString *)arg1 ;
-(void)setArtworkCatalogBlock:(id)arg1 ;
-(id)artworkCatalogBlock;
-(void)setArtist:(MPModelArtist *)arg1 ;
-(void)setGenre:(MPModelGenre *)arg1 ;
-(void)setCopyrightText:(NSString *)arg1 ;
-(float)volumeNormalization;
-(void)setVolumeNormalization:(float)arg1 ;
-(BOOL)isLibraryAdded;
-(void)setLibraryAdded:(BOOL)arg1 ;
-(BOOL)isLibraryAddEligible;
-(void)setLibraryAddEligible:(BOOL)arg1 ;
-(long long)keepLocalEnableState;
-(void)setKeepLocalEnableState:(long long)arg1 ;
-(long long)keepLocalManagedStatus;
-(void)setKeepLocalManagedStatus:(long long)arg1 ;
-(id)songPopularityForIdentifiers:(id)arg1 ;
-(void)setTrackCount:(long long)arg1 ;
-(void)setDiscCount:(long long)arg1 ;
-(void)setHasExplicitContent:(BOOL)arg1 ;
-(void)setHasCleanContent:(BOOL)arg1 ;
-(void)setMaximumItemTrackNumber:(long long)arg1 ;
-(void)setCompilation:(BOOL)arg1 ;
-(void)setClassical:(BOOL)arg1 ;
-(void)setReleaseDateComponents:(NSDateComponents *)arg1 ;
-(void)setPreorder:(BOOL)arg1 ;
-(void)setSongPopularityBlock:(id)arg1 ;
-(MPLibraryAddStatusObserverConfiguration)libraryAddStatusObserverConfiguration;
-(id)newKeepLocalStatusObserverConfiguration;
-(NSDateComponents *)releaseDateComponents;
-(id)relativeModelObjectForStoreLibraryPersonalization;
-(id)objectWithStoreLibraryPersonalizationRelativeModelObject:(id)arg1 ;
-(id)personalizationScopedPropertiesForProperties:(id)arg1 ;
-(BOOL)hasCleanContent;
-(BOOL)hasExplicitContent;
-(long long)libraryRemovalSupportedOptions;
-(NSDate *)lastDevicePlaybackDate;
-(void)setLastDevicePlaybackDate:(NSDate *)arg1 ;
-(NSDate *)libraryAddedDate;
-(void)setLibraryAddedDate:(NSDate *)arg1 ;
-(id)songPopularityBlock;
-(MPModelSong *)representativeSong;
-(void)setRepresentativeSong:(MPModelSong *)arg1 ;
-(long long)maximumItemTrackNumber;
-(BOOL)isClassical;
@end

