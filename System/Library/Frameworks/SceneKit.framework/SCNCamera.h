/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:07:29 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <libobjc.A.dylib/SCNAnimatable.h>
#import <libobjc.A.dylib/SCNTechniqueSupport.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class SCNOrderedDictionary, NSString, SCNTechnique, SCNMaterialProperty, NSArray;

@interface SCNCamera : NSObject <SCNAnimatable, SCNTechniqueSupport, NSCopying, NSSecureCoding> {

	_C3DCamera* _camera;
	unsigned _isPresentationInstance : 1;
	unsigned _custom : 1;
	unsigned _usesOrthographicProjection : 1;
	unsigned _automaticallyAdjustsZRange : 1;
	SCNOrderedDictionary* _animations;
	NSString* _name;
	double _xFov;
	double _yFov;
	double _orthographicScale;
	double _zNear;
	double _zFar;
	float _focalDistance;
	float _focalBlurRadius;
	float _focalSize;
	float _aperture;
	unsigned long long _categoryBitMask;
	SCNMatrix4 _projectionTransform;
	SCNTechnique* _technique;
	SCNMaterialProperty* _colorGrading;
	BOOL _wantsHDR;
	float _whitePoint;
	float _averageGray;
	float _exposureOffset;
	float _minimumExposure;
	float _maximumExposure;
	BOOL _wantsExposureAdaptation;
	float _exposureAdaptationDuration;
	float _exposureAdaptationBrighteningSpeedFactor;
	float _exposureAdaptationDarkeningSpeedFactor;
	float _bloomIntensity;
	float _bloomThreshold;
	float _bloomBlurRadius;
	float _motionBlurIntensity;
	float _vignettingPower;
	float _vignettingIntensity;
	float _colorFringeStrength;
	float _colorFringeIntensity;
	float _saturation;
	float _contrast;
	C3DQuaternion _screenSpaceAmbientOcclusion;

}

@property (nonatomic,copy) NSString * name; 
@property (assign,nonatomic) double xFov; 
@property (assign,nonatomic) double yFov; 
@property (assign,nonatomic) double zNear; 
@property (assign,nonatomic) double zFar; 
@property (assign,nonatomic) BOOL automaticallyAdjustsZRange; 
@property (assign,nonatomic) BOOL usesOrthographicProjection; 
@property (assign,nonatomic) double orthographicScale; 
@property (assign,nonatomic) SCNMatrix4 projectionTransform; 
@property (assign,nonatomic) double focalDistance; 
@property (assign,nonatomic) double focalSize; 
@property (assign,nonatomic) double focalBlurRadius; 
@property (assign,nonatomic) double aperture; 
@property (assign,nonatomic) double motionBlurIntensity; 
@property (assign,nonatomic) BOOL wantsHDR; 
@property (assign,nonatomic) double exposureOffset; 
@property (assign,nonatomic) double averageGray; 
@property (assign,nonatomic) double whitePoint; 
@property (assign,nonatomic) BOOL wantsExposureAdaptation; 
@property (assign,nonatomic) double exposureAdaptationBrighteningSpeedFactor; 
@property (assign,nonatomic) double exposureAdaptationDarkeningSpeedFactor; 
@property (assign,nonatomic) double minimumExposure; 
@property (assign,nonatomic) double maximumExposure; 
@property (assign,nonatomic) double bloomThreshold; 
@property (assign,nonatomic) double bloomIntensity; 
@property (assign,nonatomic) double bloomBlurRadius; 
@property (assign,nonatomic) double vignettingPower; 
@property (assign,nonatomic) double vignettingIntensity; 
@property (assign,nonatomic) double colorFringeStrength; 
@property (assign,nonatomic) double colorFringeIntensity; 
@property (assign,nonatomic) double saturation; 
@property (assign,nonatomic) double contrast; 
@property (nonatomic,readonly) SCNMaterialProperty * colorGrading; 
@property (assign,nonatomic) unsigned long long categoryBitMask; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSArray * animationKeys; 
@property (nonatomic,copy) SCNTechnique * technique; 
+(BOOL)supportsSecureCoding;
+(id)camera;
+(id)cameraWithMDLCamera:(id)arg1 ;
+(id)cameraWithCameraRef:(_C3DCamera*)arg1 ;
-(void)_registerAsObserver;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(id)copy;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(id)identifier;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setContrast:(double)arg1 ;
-(id)debugQuickLookObject;
-(NSArray *)animationKeys;
-(id)animationForKey:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 ;
-(void)addAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)setIdentifier:(id)arg1 ;
-(void)removeAllAnimations;
-(double)contrast;
-(void)addAnimation:(id)arg1 ;
-(unsigned long long)categoryBitMask;
-(void)setCategoryBitMask:(unsigned long long)arg1 ;
-(double)saturation;
-(void)setSaturation:(double)arg1 ;
-(double)focalDistance;
-(double)yFov;
-(double)xFov;
-(double)zNear;
-(double)zFar;
-(double)focalBlurRadius;
-(double)aperture;
-(BOOL)usesOrthographicProjection;
-(void)setFocalDistance:(double)arg1 ;
-(void)setYFov:(double)arg1 ;
-(void)setXFov:(double)arg1 ;
-(void)setZNear:(double)arg1 ;
-(void)setZFar:(double)arg1 ;
-(void)setFocalBlurRadius:(double)arg1 ;
-(void)setAperture:(double)arg1 ;
-(void)setUsesOrthographicProjection:(BOOL)arg1 ;
-(const void*)__CFObject;
-(C3DSceneRef)sceneRef;
-(void)_syncObjCAnimations;
-(_C3DAnimationManager*)animationManager;
-(void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2 ;
-(void)pauseAnimationForKey:(id)arg1 ;
-(void)resumeAnimationForKey:(id)arg1 ;
-(BOOL)isAnimationForKeyPaused:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2 ;
-(void)setSpeed:(double)arg1 forAnimationKey:(id)arg2 ;
-(BOOL)__removeAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4 ;
-(void)unbindAnimatablePath:(id)arg1 ;
-(_C3DAnimationChannel*)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2 ;
-(BOOL)isPausedOrPausedByInheritance;
-(id)presentationInstance;
-(_C3DCamera*)cameraRef;
-(void)_syncObjCModel;
-(void)_syncEntityObjCModel;
-(double)orthographicScale;
-(void)setOrthographicScale:(double)arg1 ;
-(void)setTechnique:(SCNTechnique *)arg1 ;
-(SCNTechnique *)technique;
-(id)presentationCamera;
-(BOOL)automaticallyAdjustsZRange;
-(BOOL)hasCustomProjectionTransform;
-(SCNMatrix4)projectionTransform;
-(id)initWithCameraRef:(_C3DCamera*)arg1 ;
-(id)initPresentationCameraWithCameraRef:(_C3DCamera*)arg1 ;
-(double)focalSize;
-(void)setFocalSize:(double)arg1 ;
-(void)setAutomaticallyAdjustsZRange:(BOOL)arg1 ;
-(BOOL)wantsHDR;
-(void)setWantsHDR:(BOOL)arg1 ;
-(double)whitePoint;
-(void)setWhitePoint:(double)arg1 ;
-(double)averageGray;
-(void)setAverageGray:(double)arg1 ;
-(BOOL)wantsExposureAdaptation;
-(void)setWantsExposureAdaptation:(BOOL)arg1 ;
-(double)exposureAdaptationDuration;
-(void)setExposureAdaptationDuration:(double)arg1 ;
-(double)exposureAdaptationBrighteningSpeedFactor;
-(void)setExposureAdaptationBrighteningSpeedFactor:(double)arg1 ;
-(double)exposureAdaptationDarkeningSpeedFactor;
-(void)setExposureAdaptationDarkeningSpeedFactor:(double)arg1 ;
-(double)minimumExposure;
-(void)setMinimumExposure:(double)arg1 ;
-(double)maximumExposure;
-(void)setMaximumExposure:(double)arg1 ;
-(double)bloomIntensity;
-(void)setBloomIntensity:(double)arg1 ;
-(double)bloomThreshold;
-(void)setBloomThreshold:(double)arg1 ;
-(double)bloomBlurRadius;
-(void)setBloomBlurRadius:(double)arg1 ;
-(double)vignettingPower;
-(void)setVignettingPower:(double)arg1 ;
-(double)vignettingIntensity;
-(void)setVignettingIntensity:(double)arg1 ;
-(double)colorFringeStrength;
-(void)setColorFringeStrength:(double)arg1 ;
-(double)colorFringeIntensity;
-(void)setColorFringeIntensity:(double)arg1 ;
-(double)motionBlurIntensity;
-(void)setMotionBlurIntensity:(double)arg1 ;
-(void)setProjectionTransform:(SCNMatrix4)arg1 ;
-(void)_customEncodingOfSCNCamera:(id)arg1 ;
-(void)setExposureOffset:(double)arg1 ;
-(void)_didDecodeSCNCamera:(id)arg1 ;
-(double)screenSpaceAmbientOcclusionAmount;
-(void)setScreenSpaceAmbientOcclusionAmount:(double)arg1 ;
-(double)screenSpaceAmbientOcclusionRadius;
-(void)setScreenSpaceAmbientOcclusionRadius:(double)arg1 ;
-(double)screenSpaceAmbientOcclusionStrength;
-(void)setScreenSpaceAmbientOcclusionStrength:(double)arg1 ;
-(double)screenSpaceAmbientOcclusionFalloff;
-(void)setScreenSpaceAmbientOcclusionFalloff:(double)arg1 ;
-(double)exposureOffset;
-(double)xMag;
-(void)setXMag:(double)arg1 ;
-(double)yMag;
-(void)setYMag:(double)arg1 ;
-(SCNMaterialProperty *)colorGrading;
-(id)debugQuickLookData;
-(id)scene;
@end

