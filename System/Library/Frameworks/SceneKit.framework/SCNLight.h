/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:07:28 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <libobjc.A.dylib/SCNAnimatable.h>
#import <libobjc.A.dylib/SCNTechniqueSupport.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@protocol MTLTexture;
@class SCNTechnique, SCNOrderedDictionary, NSString, SCNMaterialProperty, NSURL, NSData, NSArray;

@interface SCNLight : NSObject <SCNAnimatable, SCNTechniqueSupport, NSCopying, NSSecureCoding> {

	_C3DLight* _light;
	unsigned _isPresentationInstance : 1;
	unsigned _goboProjectShadows : 1;
	unsigned _castsShadow : 1;
	unsigned _usesDeferredShadows : 1;
	unsigned _usesModulatedMode : 1;
	unsigned _baked : 1;
	unsigned _shouldBakeDirectLighting : 1;
	unsigned _shouldBakeIndirectLighting : 1;
	SCNOrderedDictionary* _animations;
	NSString* _name;
	NSString* _type;
	id _color;
	id _shadowColor;
	float _shadowRadius;
	double _intensity;
	double _temperature;
	double _orthographicScale;
	unsigned long long _shadowSampleCount;
	CGSize _shadowMapSize;
	unsigned long long _categoryBitMask;
	double _zNear;
	double _zFar;
	double _shadowBias;
	float _attenuationStartDistance;
	float _attenuationEndDistance;
	float _attenuationFalloffExponent;
	float _spotInnerAngle;
	float _spotOuterAngle;
	float _spotFalloffExponent;
	SCNMaterialProperty* _gobo;
	SCNMaterialProperty* _ies;
	NSURL* _IESProfileURL;
	SCNTechnique* _technique;
	NSData* _sphericalHarmonics;
	id<MTLTexture> _probeTexture;

}

@property (nonatomic,copy) NSString * type; 
@property (nonatomic,retain) id color; 
@property (assign,nonatomic) double temperature; 
@property (assign,nonatomic) double intensity; 
@property (nonatomic,copy) NSString * name; 
@property (assign,nonatomic) BOOL castsShadow; 
@property (nonatomic,retain) id shadowColor; 
@property (assign,nonatomic) double shadowRadius; 
@property (assign,nonatomic) CGSize shadowMapSize; 
@property (assign,nonatomic) unsigned long long shadowSampleCount; 
@property (assign,nonatomic) long long shadowMode; 
@property (assign,nonatomic) double shadowBias; 
@property (assign,nonatomic) double orthographicScale; 
@property (assign,nonatomic) double zNear; 
@property (assign,nonatomic) double zFar; 
@property (assign,nonatomic) double attenuationStartDistance; 
@property (assign,nonatomic) double attenuationEndDistance; 
@property (assign,nonatomic) double attenuationFalloffExponent; 
@property (assign,nonatomic) double spotInnerAngle; 
@property (assign,nonatomic) double spotOuterAngle; 
@property (nonatomic,readonly) SCNMaterialProperty * gobo; 
@property (nonatomic,retain) NSURL * IESProfileURL; 
@property (assign,nonatomic) unsigned long long categoryBitMask; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSArray * animationKeys; 
@property (nonatomic,copy) SCNTechnique * technique; 
+(BOOL)supportsSecureCoding;
+(id)light;
+(id)lightWithMDLLight:(id)arg1 ;
+(id)lightWithMDLLightProbe:(id)arg1 ;
+(id)lightWithLightRef:(_C3DLight*)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(id)copy;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(id)identifier;
-(void)setType:(NSString *)arg1 ;
-(NSString *)type;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)color;
-(void)setColor:(id)arg1 ;
-(void)setShadowColor:(id)arg1 ;
-(NSArray *)animationKeys;
-(id)animationForKey:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 ;
-(void)addAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)setIdentifier:(id)arg1 ;
-(void)removeAllAnimations;
-(id)shadowColor;
-(void)setShadowRadius:(double)arg1 ;
-(double)shadowRadius;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)addAnimation:(id)arg1 ;
-(unsigned long long)categoryBitMask;
-(void)setCategoryBitMask:(unsigned long long)arg1 ;
-(double)temperature;
-(void)setTemperature:(double)arg1 ;
-(id)attributeForKey:(id)arg1 ;
-(void)setAttribute:(id)arg1 forKey:(id)arg2 ;
-(double)attenuationStartDistance;
-(void)setAttenuationStartDistance:(double)arg1 ;
-(double)attenuationEndDistance;
-(void)setAttenuationEndDistance:(double)arg1 ;
-(double)attenuationFalloffExponent;
-(void)setAttenuationFalloffExponent:(double)arg1 ;
-(double)spotInnerAngle;
-(double)spotOuterAngle;
-(double)zNear;
-(double)zFar;
-(void)setSpotInnerAngle:(double)arg1 ;
-(void)setSpotOuterAngle:(double)arg1 ;
-(void)setZNear:(double)arg1 ;
-(void)setZFar:(double)arg1 ;
-(const void*)__CFObject;
-(C3DSceneRef)sceneRef;
-(void)_syncObjCAnimations;
-(_C3DAnimationManager*)animationManager;
-(void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2 ;
-(void)pauseAnimationForKey:(id)arg1 ;
-(void)resumeAnimationForKey:(id)arg1 ;
-(BOOL)isAnimationForKeyPaused:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2 ;
-(void)setSpeed:(double)arg1 forAnimationKey:(id)arg2 ;
-(BOOL)__removeAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4 ;
-(void)unbindAnimatablePath:(id)arg1 ;
-(_C3DAnimationChannel*)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2 ;
-(BOOL)isPausedOrPausedByInheritance;
-(id)presentationInstance;
-(void)_syncObjCModel;
-(id)initWithLightRef:(_C3DLight*)arg1 ;
-(void)_syncEntityObjCModel;
-(id)initPresentationLightWithLightRef:(_C3DLight*)arg1 ;
-(id)presentationLight;
-(double)intensity;
-(void)setIntensity:(double)arg1 ;
-(BOOL)castsShadow;
-(void)setCastsShadow:(BOOL)arg1 ;
-(unsigned long long)shadowSampleCount;
-(void)setShadowSampleCount:(unsigned long long)arg1 ;
-(double)orthographicScale;
-(void)setOrthographicScale:(double)arg1 ;
-(SCNMaterialProperty *)gobo;
-(void)setSpotFalloffExponent:(double)arg1 ;
-(double)spotFalloffExponent;
-(BOOL)usesDeferredShadows;
-(BOOL)usesModulatedMode;
-(void)setUsesDeferredShadows:(BOOL)arg1 ;
-(void)setUsesModulatedMode:(BOOL)arg1 ;
-(void)_customEncodingOfSCNLight:(id)arg1 ;
-(void)_customDecodingOfSCNLight:(id)arg1 ;
-(void)setBaked:(BOOL)arg1 ;
-(void)setShouldBakeDirectLighting:(BOOL)arg1 ;
-(void)setShouldBakeIndirectLighting:(BOOL)arg1 ;
-(void)set_sphericalHarmonics:(id)arg1 ;
-(void)setShadowMapSize:(CGSize)arg1 ;
-(void)setShadowBias:(double)arg1 ;
-(void)setIESProfileURL:(NSURL *)arg1 ;
-(void)setTechnique:(SCNTechnique *)arg1 ;
-(void)_didDecodeSCNLight:(id)arg1 ;
-(SCNTechnique *)technique;
-(_C3DLight*)lightRef;
-(_C3DAnimationChannel*)copyAnimationChannelForKeyPath:(id)arg1 property:(id)arg2 ;
-(id)_probeTexture;
-(void)set_probeTexture:(id)arg1 ;
-(id)_sphericalHarmonics;
-(BOOL)shouldBakeDirectLighting;
-(BOOL)shouldBakeIndirectLighting;
-(BOOL)isBaked;
-(double)shadowBias;
-(CGSize)shadowMapSize;
-(long long)shadowMode;
-(void)setShadowMode:(long long)arg1 ;
-(NSURL *)IESProfileURL;
-(id)scene;
@end

