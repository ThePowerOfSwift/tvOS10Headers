/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:07:11 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/Frameworks/AVKit.framework/AVKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVKit/AVKit-Structs.h>
#import <UIKit/UIViewController.h>
#import <AVKit/_AVFocusContainerDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSString, AVKeyValueObserverCollection, AVDelegateManager, AVAudioOnlyIndicatorView, UIView, AVPlayerLayerView, NSArray, AVPlaybackControlsViewController, AVInternalPlaybackOptions, AVContentProposalViewController, UIWindow, AVPlayer, NSTimer, AVPlayerController, AVGestureRecognizerDelegate, AVDigitizerTouchGestureRecognizer, AVNonDigitizerTapRecognizer, AVPermissiveSwipeGestureRecognizer, UIDigitizerTapGestureRecognizer, UIDigitizerLongPressGestureRecognizer, UITapGestureRecognizer, AVTimeRangeCollection, NSURL, AVPlayerViewControllerTransition, NSObject, UIAlertController, AVTransportBarViewController;

@interface AVPlayerViewController : UIViewController <_AVFocusContainerDelegate> {

	BOOL _showsPlaybackControls;
	BOOL _playerShouldAutoplay;
	BOOL _playbackControlsViewControllerShouldShowLoadingIndicator;
	BOOL _playbackControlsViewControllerShouldShowScaleButton;
	BOOL _showsPlaybackControlsView;
	BOOL _isShowingPlaybackControlsViewForUserInteraction;
	BOOL _isShowingPlaybackControlsViewForAudioOnlyContent;
	BOOL _isShowingPlaybackControlsViewForPlayingOnExternalScreen;
	BOOL _isFullUXEnabled;
	BOOL _deactivated;
	BOOL _shouldPlayAfterAppBecomesActive;
	BOOL _playerHasBeenValid;
	BOOL _shouldEndLimitingRemoteInput;
	BOOL _startingContentProposalPresentation;
	BOOL _HDCPMonitoringActive;
	unsigned _deactivationReasons;
	long long _playControlsStateToRestoreWhenAppBecomesActive;
	NSString* _videoGravity;
	AVKeyValueObserverCollection* _keyValueObservers;
	AVDelegateManager* _delegateManager;
	AVAudioOnlyIndicatorView* _audioOnlyIndicatorView;
	UIView* _contentContainerView;
	AVPlayerLayerView* _playerLayerView;
	UIView* _contentOverlayView;
	UIView* _iAdPrerollView;
	UIView* _HDCPObscuringView;
	NSArray* _playerLayerViewConstraints;
	NSArray* _constraintsForContentProposal;
	AVPlaybackControlsViewController* _playbackControlsViewController;
	AVInternalPlaybackOptions* _playbackOptions;
	AVContentProposalViewController* _contentProposalViewController;
	UIWindow* _secondScreenWindow;
	id _screenDidConnectObserver;
	id _screenDidDisconnectObserver;
	id _activeAudioRouteDidChangeObserver;
	id _mediaServicesWereResetObserver;
	id _willAddDeactivationReasonObserver;
	id _didRemoveDeactivationReasonObserver;
	id _applicationDidEnterBackgroundObserver;
	id _applicationWillEnterForegroundObserver;
	id _playerItemDidPlayToEndObserver;
	id _contentProposalBoundaryTimeObserver;
	AVPlayer* _playerForContentProposalBoundaryTimeObserver;
	NSTimer* _loadingIndicatorTimer;
	long long _showPlaybackControlsViewCount;
	NSTimer* _hidePlaybackControlsViewAfterDelayTimer;
	AVPlayerController* _playerController;
	AVGestureRecognizerDelegate* _gestureRecognizerDelegate;
	AVDigitizerTouchGestureRecognizer* _panGestureRecognizer;
	AVNonDigitizerTapRecognizer* _b39ArrowGestureRecognizer;
	AVNonDigitizerTapRecognizer* _b39SelectGestureRecognizer;
	AVPermissiveSwipeGestureRecognizer* _swipeDownGestureRecognizer;
	UIDigitizerTapGestureRecognizer* _selectDigitizerTapRecognizer;
	UIDigitizerLongPressGestureRecognizer* _selectLongPressRecognizer;
	UITapGestureRecognizer* _menuTapRecognizerDismissal;
	UITapGestureRecognizer* _menuTapRecognizerOther;
	UITapGestureRecognizer* _playPauseTapRecognizer;
	UITapGestureRecognizer* _singleTouchRecognizer;
	UITapGestureRecognizer* _doubleTouchRecognizer;
	UITapGestureRecognizer* _tripleTouchRecognizer;
	AVTimeRangeCollection* _advertisementTimeRangeCollection;
	double _timeRemainingForCurrentAdvertisements;
	NSURL* _alternateThumbnailStreamURL;
	NSArray* _allowedSubtitleLanguages;
	NSArray* _customInfoViewControllers;
	NSString* _infoHint;
	AVPlayerViewControllerTransition* _playerViewControllerTransition;
	NSObject*<OS_dispatch_queue> _HDCPTimerQueue;
	NSObject*<OS_dispatch_source> _HDCPTimer;
	UIAlertController* _HDCPAlertController;
	BOOL _presentingContentProposal;
	UIView* __placeholderViewDuringPresentation;

}

@property (nonatomic,readonly) UIView * iAdPrerollView; 
@property (nonatomic,retain) AVPlayerController * playerController; 
@property (nonatomic,retain) AVContentProposalViewController * contentProposalViewController; 
@property (assign,nonatomic) long long skippingBehavior; 
@property (assign,getter=isSkipForwardEnabled,nonatomic) BOOL skipForwardEnabled; 
@property (assign,getter=isSkipBackwardEnabled,nonatomic) BOOL skipBackwardEnabled; 
@property (nonatomic,copy) NSArray * allowedSubtitleOptionLanguages; 
@property (assign,nonatomic) BOOL requiresFullSubtitles; 
@property (nonatomic,retain) NSArray * customInfoViewControllers; 
@property (nonatomic,retain) NSArray * customInfoPanelViewControllers; 
@property (nonatomic,retain) NSString * infoMenuHint; 
@property (nonatomic,retain) NSString * infoHint; 
@property (nonatomic,retain) AVTransportBarViewController * transportBarViewController; 
@property (nonatomic,readonly) AVInternalPlaybackOptions * playbackOptions;                                                                        //@synthesize playbackOptions=_playbackOptions - In the implementation block
@property (nonatomic,retain) UIView * _placeholderViewDuringPresentation;                                                                          //@synthesize _placeholderViewDuringPresentation=__placeholderViewDuringPresentation - In the implementation block
@property (assign,setter=_setPresentingContentProposal:,getter=isPresentingContentProposal,nonatomic) BOOL presentingContentProposal;              //@synthesize presentingContentProposal=_presentingContentProposal - In the implementation block
@property (nonatomic,retain) AVPlayer * player; 
@property (assign,nonatomic) BOOL showsPlaybackControls; 
@property (assign,nonatomic) BOOL requiresLinearPlayback; 
@property (nonatomic,copy) NSString * videoGravity;                                                                                                //@synthesize videoGravity=_videoGravity - In the implementation block
@property (getter=isReadyForDisplay,nonatomic,readonly) BOOL readyForDisplay; 
@property (nonatomic,readonly) UIView * contentOverlayView; 
@property (assign,nonatomic,__weak) id<AVPlayerViewControllerDelegate> delegate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)keyPathsForValuesAffectingVideoGravity;
+(id)keyPathsForValuesAffectingReadyForDisplay;
+(id)keyPathsForValuesAffectingNowPlayingPlaybackControlsViewController;
+(id)keyPathsForValuesAffectingAlternateThumbnailStreamURL;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id<AVPlayerViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<AVPlayerViewControllerDelegate>)delegate;
-(void)loadView;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2 ;
-(id)preferredFocusEnvironments;
-(BOOL)canBecomeFirstResponder;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(CGSize)preferredContentSize;
-(void)dismissViewControllerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(id)_containerView;
-(void)presentViewController:(id)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)updateViewConstraints;
-(id)privateDelegate;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(AVPlayer *)player;
-(NSString *)videoGravity;
-(void)setVideoGravity:(NSString *)arg1 ;
-(BOOL)isReadyForDisplay;
-(void)setRequiresLinearPlayback:(BOOL)arg1 ;
-(void)setTransportBarViewController:(AVTransportBarViewController *)arg1 ;
-(void)setPrivateDelegate:(id)arg1 ;
-(void)setSkippingBehavior:(long long)arg1 ;
-(void)_handleB39Select:(id)arg1 ;
-(BOOL)_handleTogglePlayPause;
-(void)setCustomInfoViewControllers:(NSArray *)arg1 ;
-(NSArray *)customInfoViewControllers;
-(BOOL)requiresLinearPlayback;
-(NSArray *)allowedSubtitleOptionLanguages;
-(void)setAllowedSubtitleOptionLanguages:(NSArray *)arg1 ;
-(BOOL)requiresFullSubtitles;
-(void)setRequiresFullSubtitles:(BOOL)arg1 ;
-(long long)skippingBehavior;
-(BOOL)isSkipForwardEnabled;
-(void)setSkipForwardEnabled:(BOOL)arg1 ;
-(BOOL)isSkipBackwardEnabled;
-(void)setSkipBackwardEnabled:(BOOL)arg1 ;
-(void)didChangePlayerController;
-(id)nowPlayingPlaybackControlsViewController;
-(BOOL)_showsPlaybackControlsView;
-(void)didUpdateFocusToFocusContainerView:(id)arg1 ;
-(void)didUpdateFocusFromFocusContainerView:(id)arg1 ;
-(BOOL)showsPlaybackControls;
-(void)_swipeDownGesture:(id)arg1 ;
-(void)panningGesture:(id)arg1 ;
-(void)navigateUp:(id)arg1 ;
-(void)navigateDown:(id)arg1 ;
-(void)didSwipeDown;
-(void)didPressLeftArrowDigitizer;
-(void)didPressRightArrowDigitizer;
-(void)doubleTouchRecognizer:(id)arg1 ;
-(void)touchRecognizer:(id)arg1 ;
-(BOOL)_handleSkipForwardBy:(double)arg1 ;
-(BOOL)_handleSkipBackwardBy:(double)arg1 ;
-(BOOL)_handleSeekToTime:(double)arg1 ;
-(void)_handleMenuTapGestureDismissal:(id)arg1 ;
-(void)_handleMenuTapGestureOther:(id)arg1 ;
-(BOOL)_menuTapRecognizerOtherShouldBegin;
-(void)adjustVolume:(id)arg1 ;
-(void)handleTapAtPosition:(long long)arg1 ;
-(void)handleClickAtPosition:(long long)arg1 ;
-(void)_remoteDigitizerTapped:(long long)arg1 ;
-(BOOL)deactivateForResigningApp;
-(void)activateForActivatingApp;
-(void)_updateUXState;
-(void)_didChangeFullScreen;
-(void)_fireLoadingIndicatorTimer:(id)arg1 ;
-(void)_updateShowsScaleButton;
-(BOOL)_isAudioOnlyContent;
-(void)_didResetMediaServices;
-(void)_updateAudioOnlyIndicatorView;
-(void)_updatePlayerLayerView;
-(void)_updatePlaybackControlsViewController;
-(void)_updatePlaybackControlsViewVisibilityForAudioOnlyContent;
-(void)_updatePlaybackControlsViewVisibilityForPlayingOnExternalScreen;
-(BOOL)_isPlayingOnExternalScreen;
-(BOOL)_isExternalPlaybackActive;
-(BOOL)_isPlayingOnSecondScreen;
-(BOOL)_handlePause;
-(BOOL)_handlePlay;
-(BOOL)_handleStop;
-(BOOL)_handleNextNavigationMarker;
-(BOOL)_handlePreviousNavigationMarker;
-(void)_handlePlayPauseTapGesture:(id)arg1 ;
-(void)_handleSelectTapGesture:(id)arg1 ;
-(void)_handleSelectLongPressGesture:(id)arg1 ;
-(void)_showPlaybackControlsViewIfNeeded;
-(void)_hidePlaybackControlsViewIfPossible;
-(void)_showPlaybackControlsViewIfNeededForUserInteraction;
-(void)_hidePlaybackControlsViewIfPossibleForUserInteraction;
-(void)_showPlaybackControlsViewIfNeededAndHideAfterDelayIfPlayingForUserInteraction;
-(void)_hidePlaybackControlsViewIfPossibleAfterDelayForUserInteraction;
-(void)_fireHidePlaybackControlsViewAfterDelayTimer:(id)arg1 ;
-(void)_showOrHidePlaybackControlsView;
-(void)_setupHDCPMonitoring;
-(void)_updateOutputObscuredDueToInsufficientExternalProtection:(id)arg1 ;
-(void)_cancelHDCPTimer;
-(void)_stopSpinningAndPlay;
-(void)_outputObscuredDueToInsufficientExternalProtectionDidChange;
-(void)doneButtonTapped:(id)arg1 ;
-(BOOL)_canDismiss;
-(void)skipBackwardThirtySeconds:(id)arg1 ;
-(void)skipBackwardTenSeconds:(id)arg1 ;
-(void)skipForwardThirtySeconds:(id)arg1 ;
-(void)gotoEndOfSeekableRanges:(id)arg1 ;
-(void)togglePlayback:(id)arg1 ;
-(void)_didSelectMediaSelectionOption:(id)arg1 withMediaCharacteristic:(id)arg2 ;
-(AVInternalPlaybackOptions *)playbackOptions;
-(UIView *)_placeholderViewDuringPresentation;
-(void)set_placeholderViewDuringPresentation:(UIView *)arg1 ;
-(BOOL)isPresentingContentProposal;
-(void)_setPresentingContentProposal:(BOOL)arg1 ;
-(AVTransportBarViewController *)transportBarViewController;
-(void)setInfoHint:(NSString *)arg1 ;
-(void)setAlternateThumbnailStreamURL:(id)arg1 ;
-(void)_didPlayToEnd;
-(void)_scheduleNextContentProposal;
-(void)_presentContentProposal:(id)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)_didPresentViewController:(id)arg1 ;
-(void)_willDismissViewController:(id)arg1 ;
-(void)_didDismissViewController:(id)arg1 ;
-(id)_presentedContentProposal;
-(void)_replayFromBeginning;
-(id)dateOfAutomaticContentProposalAcceptance;
-(void)dismissContentProposalAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)hideContentProposalViewController:(id)arg1 animated:(BOOL)arg2 hidingPlayerView:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)contentProposalViewController:(id)arg1 acceptContentProposal:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)contentProposalViewController:(id)arg1 rejectContentProposal:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setContentProposalViewController:(AVContentProposalViewController *)arg1 ;
-(double)timeRemainingForCurrentAdvertisements;
-(void)setTimeRemainingForCurrentAdvertisements:(double)arg1 ;
-(id)alternateThumbnailStreamURL;
-(NSString *)infoHint;
-(NSArray *)customInfoPanelViewControllers;
-(void)setCustomInfoPanelViewControllers:(NSArray *)arg1 ;
-(NSString *)infoMenuHint;
-(void)setInfoMenuHint:(NSString *)arg1 ;
-(BOOL)_isPresentingTransportBarViewController;
-(void)_dismissTransportBarViewControllerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_presentTransportBarViewControllerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(UIView *)iAdPrerollView;
-(AVContentProposalViewController *)contentProposalViewController;
-(id)nextContentProposalForCurrentItem;
-(void)_invalidateContentProposalBoundaryTimeObserver;
-(SCD_Struct_AV1)contentTimeToPresentContentProposal;
-(void)presentContentProposal:(id)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(AVPlayerController *)playerController;
-(void)setPlayerController:(AVPlayerController *)arg1 ;
-(UIView *)contentOverlayView;
-(void)setShowsPlaybackControls:(BOOL)arg1 ;
@end

