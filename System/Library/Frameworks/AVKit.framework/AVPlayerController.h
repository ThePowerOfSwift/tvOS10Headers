/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, March 22, 2017 at 9:07:12 AM Mountain Standard Time
* Operating System: Version 10.1 (Build 14U593)
* Image Source: /System/Library/Frameworks/AVKit.framework/AVKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVKit/AVKit-Structs.h>
#import <UIKit/UIResponder.h>

@protocol OS_dispatch_queue;
@class NSArray, NSObject, AVPlayer, AVValueTiming, NSDictionary, NSError;

@interface AVPlayerController : UIResponder {

	BOOL _jKeyDown;
	BOOL _kKeyDown;
	BOOL _lKeyDown;
	NSArray* _audioMediaSelectionOptions;
	NSArray* _legibleMediaSelectionOptions;
	long long _savedCaptionAppearanceDisplayType;
	NSObject*<OS_dispatch_queue> _seekQueue;
	BOOL _ignoreRateKeyValueChange;
	id _updateTimingPeriodicObserverToken;
	id _updateAtMinMaxTimePeriodicObserverToken;
	id _playerItemTimeJumpedObserver;
	id _playerItemDidPlayToEndTimeObserver;
	id _audioSessionInterruptionObserver;
	id _currentLocaleDidChangeObserver;
	BOOL _audioSessionInterrupted;
	BOOL _pictureInPictureInterrupted;
	float _rateBeforeInterruption;
	BOOL _isPictureInPictureSupported;
	BOOL _looping;
	long long _actionAtItemEnd;
	BOOL _pendingSeek;
	SCD_Struct_AV1 _toleranceBefore;
	SCD_Struct_AV1 _toleranceAfter;
	BOOL _isScanningForward;
	BOOL _isScanningBackward;
	unsigned long long _scanningCount;
	double _preScanningRate;
	BOOL _shouldPlayWhenLikelyToKeepUp;
	BOOL _hasDiscoveredVideo;
	BOOL _needsUpdateHasDiscoveredVideo;
	id _deviceBatteryStateDidChangeObserver;
	BOOL _deviceBatteryMonitoringWasEnabled;
	BOOL _playingOnSecondScreen;
	BOOL _atMaxTime;
	BOOL _atMinTime;
	BOOL _scrubbing;
	BOOL _seekingInternal;
	BOOL _seeking;
	BOOL _composable;
	BOOL _hasProtectedContent;
	BOOL _compatibleWithAirPlayVideo;
	BOOL _preventingIdleSystemSleep;
	BOOL _preventingIdleDisplaySleep;
	BOOL _disablingAutomaticTermination;
	BOOL _deviceBatteryChargingOrFull;
	AVPlayer* _player;
	AVValueTiming* _timing;
	double _seekToTime;
	NSDictionary* _metadata;
	NSArray* _availableMetadataFormats;
	double _rateBeforeScrubBegan;
	NSObject*<OS_dispatch_queue> _seekTimer;
	SCD_Struct_AV1 _seekToTimeInternal;

}

@property (assign,getter=isPlayingOnSecondScreen,nonatomic) BOOL playingOnSecondScreen; 
@property (assign,nonatomic) BOOL CALayerDestinationIsTVOut; 
@property (nonatomic,readonly) float nominalFrameRate; 
@property (nonatomic,readonly) BOOL hasDiscoveredVideo; 
@property (assign,getter=isAtMaxTime,nonatomic) BOOL atMaxTime;                                                      //@synthesize atMaxTime=_atMaxTime - In the implementation block
@property (assign,getter=isAtMinTime,nonatomic) BOOL atMinTime;                                                      //@synthesize atMinTime=_atMinTime - In the implementation block
@property (assign,getter=isScrubbing,nonatomic) BOOL scrubbing;                                                      //@synthesize scrubbing=_scrubbing - In the implementation block
@property (nonatomic,retain) AVPlayer * player;                                                                      //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) AVValueTiming * timing;                                                                 //@synthesize timing=_timing - In the implementation block
@property (getter=isSeekingInternal) BOOL seekingInternal;                                                           //@synthesize seekingInternal=_seekingInternal - In the implementation block
@property (assign,getter=isSeeking,nonatomic) BOOL seeking;                                                          //@synthesize seeking=_seeking - In the implementation block
@property (assign) SCD_Struct_AV1 seekToTimeInternal;                                                                //@synthesize seekToTimeInternal=_seekToTimeInternal - In the implementation block
@property (assign,nonatomic) double seekToTime;                                                                      //@synthesize seekToTime=_seekToTime - In the implementation block
@property (nonatomic,retain) NSDictionary * metadata;                                                                //@synthesize metadata=_metadata - In the implementation block
@property (assign,getter=isComposable,nonatomic) BOOL composable;                                                    //@synthesize composable=_composable - In the implementation block
@property (assign,nonatomic) BOOL hasProtectedContent;                                                               //@synthesize hasProtectedContent=_hasProtectedContent - In the implementation block
@property (nonatomic,retain) NSArray * availableMetadataFormats;                                                     //@synthesize availableMetadataFormats=_availableMetadataFormats - In the implementation block
@property (assign,getter=isCompatibleWithAirPlayVideo,nonatomic) BOOL compatibleWithAirPlayVideo;                    //@synthesize compatibleWithAirPlayVideo=_compatibleWithAirPlayVideo - In the implementation block
@property (assign,nonatomic) double rateBeforeScrubBegan;                                                            //@synthesize rateBeforeScrubBegan=_rateBeforeScrubBegan - In the implementation block
@property (assign,getter=isPreventingIdleSystemSleep,nonatomic) BOOL preventingIdleSystemSleep;                      //@synthesize preventingIdleSystemSleep=_preventingIdleSystemSleep - In the implementation block
@property (assign,getter=isPreventingIdleDisplaySleep,nonatomic) BOOL preventingIdleDisplaySleep;                    //@synthesize preventingIdleDisplaySleep=_preventingIdleDisplaySleep - In the implementation block
@property (assign,getter=isDisablingAutomaticTermination,nonatomic) BOOL disablingAutomaticTermination;              //@synthesize disablingAutomaticTermination=_disablingAutomaticTermination - In the implementation block
@property (assign,getter=isDeviceBatteryChargingOrFull,nonatomic) BOOL deviceBatteryChargingOrFull;                  //@synthesize deviceBatteryChargingOrFull=_deviceBatteryChargingOrFull - In the implementation block
@property (nonatomic,readonly) BOOL shouldPreventIdleDisplaySleep; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> seekTimer;                                               //@synthesize seekTimer=_seekTimer - In the implementation block
@property (nonatomic,readonly) long long status; 
@property (nonatomic,readonly) NSError * error; 
+(void)initialize;
+(id)keyPathsForValuesAffectingStatus;
+(id)keyPathsForValuesAffectingError;
+(id)keyPathsForValuesAffectingSeekableTimeRanges;
+(id)keyPathsForValuesAffectingCompletelySeekable;
+(id)keyPathsForValuesAffectingShouldPreventIdleDisplaySleep;
+(id)keyPathsForValuesAffectingRate;
+(id)keyPathsForValuesAffectingCanPlay;
+(id)keyPathsForValuesAffectingPlaying;
+(id)keyPathsForValuesAffectingCanPause;
+(id)keyPathsForValuesAffectingCanTogglePlayback;
+(id)keyPathsForValuesAffectingHasContent;
+(id)keyPathsForValuesAffectingContentDuration;
+(id)keyPathsForValuesAffectingContentDimensions;
+(id)keyPathsForValuesAffectingCurrentTime;
+(id)keyPathsForValuesAffectingMinTime;
+(id)keyPathsForValuesAffectingMaxTime;
+(id)keyPathsForValuesAffectingContentDurationWithinEndTimes;
+(id)keyPathsForValuesAffectingCurrentTimeWithinEndTimes;
+(id)keyPathsForValuesAffectingLoadedTimeRanges;
+(id)keyPathsForValuesAffectingHasEnabledAudio;
+(id)keyPathsForValuesAffectingHasEnabledVideo;
+(id)keyPathsForValuesAffectingHasContentChapters;
+(id)keyPathsForValuesAffectingHasLiveStreamingContent;
+(id)keyPathsForValuesAffectingHasTrimmableContent;
+(id)keyPathsForValuesAffectingHasShareableContent;
+(id)keyPathsForValuesAffectingCanSeek;
+(id)keyPathsForValuesAffectingCanScanForward;
+(id)keyPathsForValuesAffectingCanScanBackward;
+(id)keyPathsForValuesAffectingCanSeekToBeginning;
+(id)keyPathsForValuesAffectingCanSeekToEnd;
+(id)keyPathsForValuesAffectingCanSeekFrameForward;
+(id)keyPathsForValuesAffectingCanSeekFrameBackward;
+(id)keyPathsForValuesAffectingAllowsExternalPlayback;
+(id)keyPathsForValuesAffectingPlayingOnExternalScreen;
+(id)keyPathsForValuesAffectingExternalPlaybackActive;
+(id)keyPathsForValuesAffectingExternalPlaybackType;
+(id)keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName;
+(id)keyPathsForValuesAffectingPictureInPicturePossible;
+(id)keyPathsForValuesAffectingHasMediaSelectionOptions;
+(id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;
+(id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;
-(BOOL)canPause;
-(void)dealloc;
-(id)init;
-(BOOL)isLooping;
-(BOOL)hasContent;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(double)currentTime;
-(long long)status;
-(BOOL)isComposable;
-(BOOL)isCompatibleWithAirPlayVideo;
-(BOOL)hasEnabledAudio;
-(NSDictionary *)metadata;
-(void)setMetadata:(NSDictionary *)arg1 ;
-(NSError *)error;
-(AVValueTiming *)timing;
-(void)setTiming:(AVValueTiming *)arg1 ;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(AVPlayer *)player;
-(id)initWithPlayer:(id)arg1 ;
-(BOOL)isExternalPlaybackActive;
-(double)volume;
-(id)mediaSelectionGroupForMediaCharacteristic:(id)arg1 ;
-(id)loadedTimeRanges;
-(id)seekableTimeRanges;
-(void)seekToTime:(double)arg1 ;
-(BOOL)allowsExternalPlayback;
-(BOOL)canSeek;
-(double)maxTime;
-(BOOL)isPlaying;
-(long long)externalPlaybackType;
-(void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3 ;
-(void)setVolume:(double)arg1 ;
-(BOOL)isScrubbing;
-(void)setSeeking:(BOOL)arg1 ;
-(BOOL)hasProtectedContent;
-(void)setAllowsExternalPlayback:(BOOL)arg1 ;
-(id)audioOptions;
-(BOOL)hasEnabledVideo;
-(double)rate;
-(void)setRate:(double)arg1 ;
-(float)nominalFrameRate;
-(void)updateTiming;
-(BOOL)isSeeking;
-(void)skipBackwardThirtySeconds:(id)arg1 ;
-(void)gotoEndOfSeekableRanges:(id)arg1 ;
-(void)togglePlayback:(id)arg1 ;
-(BOOL)isPictureInPicturePossible;
-(id)_queuePlayer;
-(BOOL)isCompletelySeekable;
-(BOOL)shouldPreventIdleDisplaySleep;
-(void)autoplay:(id)arg1 ;
-(BOOL)canTogglePlayback;
-(void)togglePlaybackEvenWhenInBackground:(id)arg1 ;
-(void)setLooping:(BOOL)arg1 ;
-(void)updateAtMinMaxTime;
-(void)increaseVolume:(id)arg1 ;
-(void)decreaseVolume:(id)arg1 ;
-(void)changeVolumeToMinimum:(id)arg1 ;
-(void)changeVolumeToMaximum:(id)arg1 ;
-(void)toggleMuted:(id)arg1 ;
-(double)contentDuration;
-(CGSize)contentDimensions;
-(double)minTime;
-(void)setMinTime:(double)arg1 ;
-(void)setMaxTime:(double)arg1 ;
-(double)contentDurationWithinEndTimes;
-(double)currentTimeWithinEndTimes;
-(BOOL)hasContentChapters;
-(BOOL)hasLiveStreamingContent;
-(BOOL)hasTrimmableContent;
-(BOOL)hasShareableContent;
-(BOOL)_isRestrictedFromSavingPlayerItem:(id)arg1 ;
-(BOOL)_isMarkedNotSerializablePlayerItem:(id)arg1 ;
-(void)_setNeedsUpdateHasDiscoveredVideo;
-(void)_updateHasDiscoveredVideoIfNeeded;
-(void)beginScrubbing;
-(void)endScrubbing;
-(void)throttledSeekToTime:(SCD_Struct_AV1)arg1 toleranceBefore:(SCD_Struct_AV1)arg2 toleranceAfter:(SCD_Struct_AV1)arg3 ;
-(void)actuallySeekToTime;
-(void)seekByTimeInterval:(double)arg1 ;
-(void)seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3 ;
-(BOOL)canScanForward;
-(void)scanForward:(id)arg1 ;
-(void)beginScanningForward:(id)arg1 ;
-(void)_updateScanningForwardRate;
-(void)endScanningForward:(id)arg1 ;
-(BOOL)canScanBackward;
-(void)scanBackward:(id)arg1 ;
-(void)beginScanningBackward:(id)arg1 ;
-(void)_updateScanningBackwardRate;
-(void)endScanningBackward:(id)arg1 ;
-(BOOL)canSeekToBeginning;
-(void)seekToBeginning:(id)arg1 ;
-(BOOL)canSeekToEnd;
-(void)seekToEnd:(id)arg1 ;
-(BOOL)canSeekFrameForward;
-(void)seekFrameForward:(id)arg1 ;
-(BOOL)canSeekFrameBackward;
-(void)seekFrameBackward:(id)arg1 ;
-(void)beginScrubbing:(id)arg1 ;
-(void)endScrubbing:(id)arg1 ;
-(BOOL)isPlayingOnExternalScreen;
-(BOOL)isPlayingOnSecondScreen;
-(id)externalPlaybackAirPlayDeviceLocalizedName;
-(BOOL)isPictureInPictureInterrupted;
-(void)setPictureInPictureInterrupted:(BOOL)arg1 ;
-(void)_attemptToResumePlaybackAfterInterruption;
-(id)scanningDelays;
-(BOOL)isAtMaxTime;
-(void)setAtMaxTime:(BOOL)arg1 ;
-(BOOL)isAtMinTime;
-(void)setAtMinTime:(BOOL)arg1 ;
-(BOOL)isSeekingInternal;
-(void)setSeekingInternal:(BOOL)arg1 ;
-(SCD_Struct_AV1)seekToTimeInternal;
-(void)setSeekToTimeInternal:(SCD_Struct_AV1)arg1 ;
-(double)seekToTime;
-(void)setSeekToTime:(double)arg1 ;
-(void)setComposable:(BOOL)arg1 ;
-(void)setHasProtectedContent:(BOOL)arg1 ;
-(void)setAvailableMetadataFormats:(NSArray *)arg1 ;
-(void)setCompatibleWithAirPlayVideo:(BOOL)arg1 ;
-(double)rateBeforeScrubBegan;
-(void)setRateBeforeScrubBegan:(double)arg1 ;
-(BOOL)isPreventingIdleSystemSleep;
-(void)setPreventingIdleSystemSleep:(BOOL)arg1 ;
-(BOOL)isPreventingIdleDisplaySleep;
-(void)setPreventingIdleDisplaySleep:(BOOL)arg1 ;
-(BOOL)isDisablingAutomaticTermination;
-(void)setDisablingAutomaticTermination:(BOOL)arg1 ;
-(BOOL)isDeviceBatteryChargingOrFull;
-(void)setDeviceBatteryChargingOrFull:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_queue>)seekTimer;
-(void)setPlayingOnSecondScreen:(BOOL)arg1 ;
-(BOOL)CALayerDestinationIsTVOut;
-(void)setCALayerDestinationIsTVOut:(BOOL)arg1 ;
-(BOOL)hasDiscoveredVideo;
-(BOOL)hasAudioMediaSelectionOptions;
-(BOOL)hasLegibleMediaSelectionOptions;
-(BOOL)hasMediaSelectionOptions;
-(id)currentAudioMediaSelectionOption;
-(id)keyPathsForValuesAffectingCurrentAudioMediaSelectionOption;
-(void)setCurrentAudioMediaSelectionOption:(id)arg1 ;
-(id)currentLegibleMediaSelectionOption;
-(id)keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption;
-(void)setCurrentLegibleMediaSelectionOption:(id)arg1 ;
-(void)toggleCaptions;
-(void)reloadOptions;
-(void)reloadAudioOptions;
-(id)_selectedMediaOptionWithMediaCharacteristic:(id)arg1 ;
-(void)reloadLegibleOptions;
-(void)_setMediaOption:(id)arg1 mediaCharacteristic:(id)arg2 ;
-(id)legibleMediaSelectionOptions;
-(void)_disableLegibleMediaSelectionOptions:(id)arg1 ;
-(void)_enableAutoMediaSelection:(id)arg1 ;
-(void)setSavedCaptionAppearanceDisplayType:(long long)arg1 ;
-(long long)savedCaptionAppearanceDisplayType;
-(id)legibleOptions;
-(void)setAudioMediaSelectionOptions:(id)arg1 ;
-(void)setLegibleMediaSelectionOptions:(id)arg1 ;
-(id)audioMediaSelectionOptions;
-(void)setPlaying:(BOOL)arg1 ;
-(void)setScrubbing:(BOOL)arg1 ;
-(BOOL)canPlay;
-(void)pause:(id)arg1 ;
-(void)play:(id)arg1 ;
-(NSArray *)availableMetadataFormats;
@end

